
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import qlqcafe.ConnectDB;
import qlqcafe.DatBan;
import qlqcafe.DoUong;
import qlqcafe.LayDateOh;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class testKhoangTG extends javax.swing.JFrame {
    private static DefaultTableModel dtm;
    public static LayDateOh ld0 = new LayDateOh();
    /**
     * Creates new form testKhoangTG
     */
    public testKhoangTG() throws ParseException {
        initComponents();
        layDulieuDatBanTrongNgay();
        resetLaiSLBanTrong();
        updateSLBanDatTrongNgay();
    }
    
    private void layDulieuDatBanTrongNgay() throws ParseException{
        Connection cn = ConnectDB.SQLConnect();
        dtm = (DefaultTableModel)jTable_datBan.getModel();
        dtm.setNumRows(0);
        Date currentDate = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm");
        String sql = "EXEC SP_SEL_DATBAN_24H '"+ld0.getLayDate0hToday()+"','"+ld0.getLayDate0hTomorrow()+"'";
        Vector vt;
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){  
                String ngayDen = rs.getString("NGAYDEN");
                Date dateNgayDen = sdf.parse(ngayDen);
                dateNgayDen.compareTo(ld0.getToday());
                System.out.println(dateNgayDen.compareTo(ld0.getToday()));
                
                if(ld0.getTomorrow().getTime() - ld0.getToday().getTime() >=0){
                    vt = new Vector();
                    vt.add(rs.getString("THOIGIAN"));
                    vt.add(rs.getString("NGAYDAT"));
                    vt.add(rs.getString("TENKH"));
                    vt.add(rs.getString("SDT"));
                    vt.add(rs.getString("NGAYDEN"));
                    vt.add(rs.getInt("SOLUONGBAN"));
                    vt.add(rs.getString("GHICHU"));
                    dtm.addRow(vt);
                }
            }
            jTable_datBan.setModel(dtm);
            rs.close();
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void resetLaiSLBanTrong(){
        Connection cn = ConnectDB.SQLConnect();
        //cộng lại các số lượng bàn đã đặt
//        String sql = "UPDATE BAN SET TRANGTHAIRONG = "+1+" WHERE MABAN IN"
//                    +"("
//                        +"SELECT DISTINCT MABAN" 
//                            +"FROM BAN "
//                                +"WHERE TRANGTHAIRONG = "+0
//                        +"UNION "
//                        +"SELECT SUM(SOLUONGBAN) AS SLBAN" 
//                            +"FROM DATBAN"
//                                +"WHERE NGAYDEN "
//                                    +"BETWEEN CAST('"+ld0.getLayDate0hToday()+"' AS DATETIME)"
//                                        +"AND CAST('"+ld0.getLayDate0hTomorrow()+"' AS DATETIME)"	
//                    +")";
        String sql = "UPDATE BAN SET TRANGTHAIRONG = "+1+" WHERE MABAN IN"
                    +"(	SELECT DISTINCT MABAN FROM BAN WHERE TRANGTHAIRONG = "+0+")";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();

            ps.close();
            cn.close();
        } catch (Exception e) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, e); 
        }                        
    }
    
    private void updateSLBanDatTrongNgay(){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "EXEC SP_UPDATE_DATBAN_24H '"+ld0.getLayDate0hToday()+"','"+ld0.getLayDate0hTomorrow()+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();

            ps.close();
            cn.close();
        } catch (Exception e) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, e); 
        }         
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_datBan = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_datBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Thời gian", " Ngày đặt", "Tên khách hàng", "SĐT", "Ngày đến", "Sl bàn đặt", "Ghi chú"
            }
        ));
        jScrollPane1.setViewportView(jTable_datBan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(testKhoangTG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(testKhoangTG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(testKhoangTG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(testKhoangTG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new testKhoangTG().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(testKhoangTG.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_datBan;
    // End of variables declaration//GEN-END:variables
}


    
//    private void resetSLBanTrong(){
//        // get a calendar instance, which defaults to "now"
//        Calendar calendar = Calendar.getInstance();
//
//        // get a date to represent "today"
//        Date today = calendar.getTime();
//        System.out.println("today: " + today);
//
//        // add one day to the date/calendar
//        calendar.add(Calendar.DAY_OF_YEAR, 1);
//
//        // now get "tomorrow"
//        //lấy ngày giờ theo string
//        Date tomorrow = calendar.getTime();
//        String strDate = String.valueOf(new SimpleDateFormat("dd-MM-yyyy").format(tomorrow));
//        String strTime = String.valueOf(new SimpleDateFormat("HH:mm").format(tomorrow));
//        
//        // print out tomorrow's date
//        String thoiGian0h = "00:00";
//        String layDateTime = strDate+" "+strTime;
//        System.out.println("tomorrow: " + layDateTime);
//        //SO SANH TG
//        if(strTime.equals(thoiGian0h)){
//            System.out.println("true");
//            Connection cn = ConnectDB.SQLConnect();
//            String sql = "UPDATE BAN SET TRANGTHAIRONG = "+1+" WHERE MABAN IN"
//                    +"(SELECT TOP "+items+" MABAN FROM BAN WHERE TRANGTHAIRONG = "+0+" ORDER BY NEWID())";
//            
//            
//            try {
//                PreparedStatement ps = cn.prepareStatement(sql);
//                ps.executeUpdate();
//                
//                ps.close();
//                cn.close();
//            } catch(SQLException e){
//                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
//            }
//            
//        }else System.out.println("false");
//    }

    
//    private void layDateTime(){
//        //--------------------------------------------------------------------------//
//        // get a calendar instance, which defaults to "now"
//        Calendar calendar = Calendar.getInstance();
//
//        // get a date to represent "today"
//        Date today = calendar.getTime();
//
//        // add one day to the date/calendar
//        calendar.add(Calendar.DAY_OF_YEAR, 1);
//
//        // now get "tomorrow"
//        Date tomorrow = calendar.getTime();
//
//        // 0h
//        String thoiGian0h = "00:00";
//
//        //lấy datetime ngày hôm nay
//        String strDateToday = String.valueOf(new SimpleDateFormat("yyyy-MM-dd").format(today));
//        String strTimeToday = String.valueOf(new SimpleDateFormat("HH:mm").format(today));
//        
//        //lấy datetime ngày mai
//        String strDateTomorrow = String.valueOf(new SimpleDateFormat("yyyy-MM-dd").format(tomorrow));
//        String strTimeTomorrow = String.valueOf(new SimpleDateFormat("HH:mm").format(tomorrow));
//        
//        //print date
//        String layDate0hToday = strDateToday+" "+thoiGian0h;
//        System.out.println(layDate0hToday);
//        String layDate0hTomorrow = strDateTomorrow+" "+thoiGian0h;
//        System.out.println(layDate0hTomorrow);
//        //--------------------------------------------------------------------------//
//    }
