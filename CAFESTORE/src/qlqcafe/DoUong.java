/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlqcafe;
import java.awt.HeadlessException;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class DoUong extends javax.swing.JFrame {    
    private final NguoiDung staff;
    private static DefaultTableModel dtm;
    private boolean add = false, change = false;
    
    public DoUong(NguoiDung user) {
        initComponents();
        this.staff = user;
        lbl_TenNV.setText(staff.getHoten());
        setResizable(false);
        setLocationRelativeTo(this);
        layDoUong();
        tat();      
        startFunctionalButtons();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_home = new javax.swing.JButton();
        jLabel_ten = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_doUong = new javax.swing.JTable();
        txt_timKiem = new javax.swing.JTextField();
        btn_timKiem = new javax.swing.JButton();
        jLabel_thongTin = new javax.swing.JLabel();
        jPanel_thongTin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbx_loaiDoUong = new javax.swing.JComboBox<>();
        txt_tenDoUong = new javax.swing.JTextField();
        txt_maDoUong = new javax.swing.JTextField();
        txt_soLuong = new javax.swing.JTextField();
        txt_gia = new javax.swing.JTextField();
        cbx_dvt = new javax.swing.JComboBox<>();
        jtb_addLoaiDoDuong = new javax.swing.JToggleButton();
        jtb_addDVT = new javax.swing.JToggleButton();
        jLabel10 = new javax.swing.JLabel();
        txt_sale = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_them = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_chinhSua = new javax.swing.JButton();
        btn_huy = new javax.swing.JButton();
        btn_luu = new javax.swing.JButton();
        jLabel_chucNang = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lbl_TenNV = new javax.swing.JLabel();
        jLabel_NV = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/smart-home.png"))); // NOI18N
        btn_home.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleTrangChu(evt);
            }
        });
        getContentPane().add(btn_home, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 47, -1));

        jLabel_ten.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_ten.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_ten.setText("QUẢN LÝ ĐỒ UỐNG");
        getContentPane().add(jLabel_ten, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 490, 52));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setToolTipText("");

        jTable_doUong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Đồ Uống", "Loại Đồ Uống", "Tên Đồ Uống", "DVT", "Số Lượng", "Đơn Giá (VND)", "Sale (%)"
            }
        ));
        jTable_doUong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleDoUongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_doUong);
        if (jTable_doUong.getColumnModel().getColumnCount() > 0) {
            jTable_doUong.getColumnModel().getColumn(0).setMinWidth(90);
            jTable_doUong.getColumnModel().getColumn(0).setMaxWidth(150);
            jTable_doUong.getColumnModel().getColumn(1).setMinWidth(120);
            jTable_doUong.getColumnModel().getColumn(1).setMaxWidth(180);
            jTable_doUong.getColumnModel().getColumn(2).setMinWidth(200);
            jTable_doUong.getColumnModel().getColumn(2).setMaxWidth(300);
            jTable_doUong.getColumnModel().getColumn(3).setMinWidth(50);
            jTable_doUong.getColumnModel().getColumn(3).setMaxWidth(150);
            jTable_doUong.getColumnModel().getColumn(4).setMinWidth(50);
            jTable_doUong.getColumnModel().getColumn(4).setMaxWidth(80);
            jTable_doUong.getColumnModel().getColumn(5).setMinWidth(100);
            jTable_doUong.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable_doUong.getColumnModel().getColumn(6).setMinWidth(50);
            jTable_doUong.getColumnModel().getColumn(6).setMaxWidth(80);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 830, 450));

        txt_timKiem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_timKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 580, 610, 50));

        btn_timKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/search (1).png"))); // NOI18N
        btn_timKiem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleTimKiemSanPham(evt);
            }
        });
        getContentPane().add(btn_timKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 580, 80, 50));

        jLabel_thongTin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_thongTin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_thongTin.setText("THÔNG TIN ĐỒ UỐNG");
        getContentPane().add(jLabel_thongTin, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 70, 300, 30));

        jPanel_thongTin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mã Đồ Uống");
        jPanel_thongTin.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 73, 36));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Loại Đồ Uống");
        jPanel_thongTin.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 76, 36));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tên Đồ Uống");
        jPanel_thongTin.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 73, 36));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Đơn Vị Tính");
        jLabel4.setRequestFocusEnabled(false);
        jPanel_thongTin.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 76, 36));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Số Lượng");
        jPanel_thongTin.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 76, 36));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Đơn Giá");
        jPanel_thongTin.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 76, 41));

        cbx_loaiDoUong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cafe", "Sinh Tố", "Nước Ép", "Nước Giải Khát" }));
        cbx_loaiDoUong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(cbx_loaiDoUong, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 160, 38));

        txt_tenDoUong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(txt_tenDoUong, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 217, 36));

        txt_maDoUong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(txt_maDoUong, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 217, 36));

        txt_soLuong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(txt_soLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 217, 36));

        txt_gia.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(txt_gia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 217, 37));

        cbx_dvt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_dvt.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(cbx_dvt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 160, 40));

        jtb_addLoaiDoDuong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/plus.png"))); // NOI18N
        jtb_addLoaiDoDuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleThemLoaiSP(evt);
            }
        });
        jPanel_thongTin.add(jtb_addLoaiDoDuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 50, 40));

        jtb_addDVT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/plus.png"))); // NOI18N
        jtb_addDVT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleThemDVT(evt);
            }
        });
        jPanel_thongTin.add(jtb_addDVT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 50, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Sale (%)");
        jPanel_thongTin.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 76, 41));

        txt_sale.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_thongTin.add(txt_sale, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 217, 37));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/unnamed.jpg"))); // NOI18N
        jPanel_thongTin.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 350));

        getContentPane().add(jPanel_thongTin, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 120, 320, 350));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/plus.png"))); // NOI18N
        btn_them.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleThemSanPham(evt);
            }
        });
        jPanel1.add(btn_them, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 70, 40));

        btn_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/delete.png"))); // NOI18N
        btn_xoa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleXoaSanPham(evt);
            }
        });
        jPanel1.add(btn_xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 70, 40));

        btn_chinhSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/edit.png"))); // NOI18N
        btn_chinhSua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_chinhSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleChinhSuaSanPham(evt);
            }
        });
        jPanel1.add(btn_chinhSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 70, 40));

        btn_huy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/x-button.png"))); // NOI18N
        btn_huy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleHuy(evt);
            }
        });
        jPanel1.add(btn_huy, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 70, 40));

        btn_luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/floppy-disk.png"))); // NOI18N
        btn_luu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleLuuSanPham(evt);
            }
        });
        jPanel1.add(btn_luu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 70, 90));

        jLabel_chucNang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_chucNang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_chucNang.setText("CHỨC NĂNG");
        jPanel1.add(jLabel_chucNang, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 210, 45));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Thêm");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 70, 21));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Xóa");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 70, 21));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Chỉnh sửa");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 70, 21));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Lưu");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 70, 21));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Hủy");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 68, 21));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/unnamed.jpg"))); // NOI18N
        jLabel15.setText("jLabel15");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 470, -1, 230));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/unnamed.jpg"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 490, 50));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/1.png"))); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 700));

        lbl_TenNV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_TenNV.setForeground(new java.awt.Color(0, 51, 255));
        lbl_TenNV.setText("DIỀN TÊN NV");
        getContentPane().add(lbl_TenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 10, 200, 30));

        jLabel_NV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_NV.setText("Nhân viên:");
        getContentPane().add(jLabel_NV, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 80, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void handleTrangChu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleTrangChu
        // TODO add your handling code here:        
        if(staff.getMacv() == 1){
            GiaoDienChung gdc = new GiaoDienChung(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }
        if(staff.getMacv() == 2){
            GiaoDienNhanVien gdc = new GiaoDienNhanVien(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }
    }//GEN-LAST:event_handleTrangChu
        
    private void loadLoaiSP(){
        cbx_loaiDoUong.removeAllItems();       
        String sql = "SELECT TENLSP FROM LOAISP";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                cbx_loaiDoUong.addItem(rs.getString("TENLSP"));
            }        
        }catch(SQLException ex){
            System.out.println("Error layLoaiSP: " + ex.getMessage());
        }        
        cbx_loaiDoUong.setSelectedIndex(0);
    }
    
    private void loadDVT(){
        cbx_dvt.removeAllItems();
        String sql = "SELECT TENDVT FROM DVT";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                cbx_dvt.addItem(rs.getString("TENDVT"));
            }            
        }catch(SQLException ex){
            System.out.println("Error layDVT: " + ex.getMessage());
        }        
        cbx_dvt.setSelectedIndex(0);
    }
    
    private void layLoaiNuocThem(){
        cbx_loaiDoUong.removeAllItems();       
        loadLoaiSP();
    }
    
    private void bat(){
        txt_maDoUong.setEnabled(true);
        cbx_loaiDoUong.setEnabled(true);
        txt_tenDoUong.setEnabled(true);
        cbx_dvt.setEnabled(true);
        txt_soLuong.setEnabled(true);
        txt_gia.setEnabled(true);
        txt_sale.setEnabled(true);
    }
    
    private void tat(){
        txt_maDoUong.setEnabled(false);
        cbx_loaiDoUong.setEnabled(false);
        txt_tenDoUong.setEnabled(false);
        cbx_dvt.setEnabled(false);
        txt_soLuong.setEnabled(false);
        txt_gia.setEnabled(false);        
        txt_sale.setEnabled(false);
    }
    
    private void lamMoi(){        
        add = false;
        change= false;
        txt_maDoUong.setText("");
        cbx_loaiDoUong.setSelectedIndex(0);
        txt_tenDoUong.setText("");
        cbx_dvt.setSelectedIndex(0);
        txt_soLuong.setText("");
        txt_gia.setText("");
        txt_sale.setText("");       
    }    
    
    private void handleTimKiemSanPham(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleTimKiemSanPham
        if(!txt_timKiem.getText().equals("")){
            String sql = "SELECT SP.MASP, LSP.TENLSP, SP.TENSP, DT.TENDVT, SP.SOLUONG, SP.DONGIA, SP.GIAMGIA " +
                    "FROM SANPHAM AS SP, LOAISP AS LSP, DVT AS DT " +
                    "WHERE SP.MALSP = LSP.MALSP AND SP.MADVT = DT.MADVT AND SP.MASP LIKE N'%" + txt_timKiem.getText() + "%'";
            int i = layDulieu(sql);
                        
            if(i == 0){
                sql = "SELECT SP.MASP, LSP.TENLSP, SP.TENSP, DT.TENDVT, SP.SOLUONG, SP.DONGIA, SP.GIAMGIA " +
                    "FROM SANPHAM AS SP, LOAISP AS LSP, DVT AS DT " +
                    "WHERE SP.MALSP = LSP.MALSP AND SP.MADVT = DT.MADVT AND SP.TENSP LIKE N'%" + txt_timKiem.getText() + "%'";
                i = layDulieu(sql);
                if(i == 0){
                    JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm có Mã hoặc Tên là " + txt_timKiem.getText());
                }
            }
            lamMoi();
            tat();
            txt_timKiem.setText("");
        }
    }//GEN-LAST:event_handleTimKiemSanPham
    
    private boolean kiemTraRong(){        
//        if(txt_maDoUong.getText().equals("")){
//            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Mã đồ uống");
//            return false;
//        }
        if(cbx_loaiDoUong.getSelectedItem().toString() == null){
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Loại đồ uống");
            return false;
        }
        if(txt_tenDoUong.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Tên đồ uống");
            return false;
        }
        if(cbx_dvt.getSelectedItem().toString() == null){
             JOptionPane.showMessageDialog(this, "Bạn chưa nhập Đơn vị");
            return false;
        }
        if (txt_soLuong.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Số lượng của đồ uống");
            return false;
        }        
        if(txt_gia.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Đơn giá của đồ uống");
            return false;
        }
        if (txt_gia.getText().equals("0")){
            JOptionPane.showMessageDialog(this, "Đơn giá không cho phép 0");
            return false;
        }
        if (txt_sale.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Khuyến mãi");
            return false;
        }        
        return true;
    }
    
    private boolean kiemTraGia(int gia){        
        if(gia < 5000){
           JOptionPane.showMessageDialog(this, "Giá thấp nhất là 5.000VNĐ");
            return false;
        }
        return true;
    }
    
    private boolean kiemTraTrungMaSP(int maSP){               
        String sql = "select MASP from SANPHAM where MASP = N'" + maSP + "'";
        boolean trung = false;        
        try {             
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) trung = true;
        }
        catch (HeadlessException | SQLException ex) {
            System.out.println("Error 'kiemTraTrungMaSP': " + ex.getMessage());
        }                
        return trung;
    }
    
    private boolean kiemTraTrungTenSP(String tenSP){        
        String sql = null;
        if(add == true && change == false){
            sql = "SELECT TENSP FROM SANPHAM WHERE TENSP = N'" + tenSP + "'";
        }
        if(change == true && add == false){
            sql = "SELECT * FROM (SELECT TENSP FROM SANPHAM EXCEPT "
                    + "(SELECT TENSP FROM SANPHAM WHERE TENSP = N'" +tenSP+ "')) AS TENSP WHERE TENSP = N'" +tenSP+ "'";
        }
        
        boolean trung = false;    
        try {                
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) trung = true;                
        }
        catch (HeadlessException | SQLException ex) {
            System.out.println("Error 'kiemTraTrungTenSP': " + ex.getMessage());
        }        
        return trung;
    }
    
    private boolean kiemTraLoi(){
        //kiểm tra số
        String numeric = "\\d+";
        //kiểm tra có ký tự đặc biệt        
        String pattern3 = "[a-zA-Z0-9ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúă"
                + "đĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤ"
                + "ỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ ]+";    
        //String special_chars = "\\w+";
        
//        if(!txt_maDoUong.getText().trim().matches(numeric)){
//            JOptionPane.showMessageDialog(this, "Mã đồ uống chỉ được nhập Số!");
//            return false;
//        }
        if(!txt_tenDoUong.getText().trim().matches(pattern3)){
            JOptionPane.showMessageDialog(this, "Tên đồ uống không được chứa Ký tự đặc biệt!");
            return false;
        }
        if(!txt_soLuong.getText().trim().matches(numeric)){
            JOptionPane.showMessageDialog(this, "Số lượng chỉ được nhập Số!");
            return false;
        }
        if(txt_soLuong.getText().trim().matches(numeric)){
            if(txt_soLuong.getText().equals("0")){
                if(add == true){
                    JOptionPane.showMessageDialog(this, "Nếu Thêm sản phẩm mới, Số lượng phải lớn hơn 0");
                    return false;
                }
            }
        }        
        if(!txt_gia.getText().trim().matches(numeric)){
            JOptionPane.showMessageDialog(this, "Đơn giá chỉ được nhập số!");
            return false;
        }
        if(!txt_sale.getText().trim().matches(numeric)){
            JOptionPane.showMessageDialog(this, "Khuyến mãi (%) chỉ được nhập số!");
            return false;
        }
        return true;
    }
    
    private void themDoUong(int maLSP, String tenNuoc, int maDVT, int soLuong, int gia, int sale){               
        String sql = "insert into SANPHAM(MALSP,TENSP,MADVT,SOLUONG,DONGIA,GIAMGIA) values (?,?,?,?,?,?)";
        try {
            Connection cn = ConnectDB.SQLConnect();   
            try (PreparedStatement ps = cn.prepareStatement(sql)) {
                ps.setInt(1 , maLSP);
                ps.setString(2 , tenNuoc);
                ps.setInt(3 , maDVT);
                ps.setInt(4 , soLuong);
                ps.setInt(5 , gia);
                ps.setInt(6, sale);
                ps.executeUpdate();
            }
            lamMoi();
            tat();
        } catch (SQLException ex) {
            System.out.println("Error 'luuDoUong': " + ex.getMessage());
        }
    }
    
    private void chinhsuaDoUong(int maNuoc, int maLSP, String tenNuoc, int maDVT, int soLuong, int donGia, int sale){        
        Connection cn = ConnectDB.SQLConnect();
        String sql = "update SANPHAM set MALSP = N'" +maLSP+ "', TENSP = N'" +tenNuoc+ "', MADVT = N'" +maDVT+ "', SOLUONG = N'"
                +soLuong+ "', DONGIA = N'" +donGia+ "', GIAMGIA = N'" +sale+ "' where MASP = N'" +maNuoc+ "'";       
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();
            lamMoi();
            tat();         
        } catch (SQLException ex) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }
    
    private void luuLS(int maNuoc, int maLSP, String tenNuoc, int maDVT, int soLuong , int donGia, int sale, String maNV, String chucNang){
        String sql;
        if(add = true){
            sql = "SELECT MASP FROM SANPHAM WHERE TENSP = N'" + tenNuoc + "'";            
            try {
                Connection cn = ConnectDB.SQLConnect();   
                PreparedStatement ps = cn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                if(rs.next()) maNuoc = rs.getInt("MASP");
            } catch (SQLException ex) {
                System.out.println("Error luuLS in connect 1: " + ex.getMessage());
            }
        }
        
        sql = "insert into LSTHAYDOI values (?,?,?,?,?,?,?,?,?,?)";
        String ngay = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss").format(new Date());
        try {
            Connection cn = ConnectDB.SQLConnect();   
            try (PreparedStatement ps = cn.prepareStatement(sql)) {
                ps.setInt(1 , maNuoc);
                ps.setString(2 , ngay);
                ps.setInt(3 , maLSP);
                ps.setString(4 , tenNuoc);                
                ps.setInt(5 , maDVT);
                ps.setInt(6 , soLuong);
                ps.setInt(7 , donGia);                
                ps.setInt(8, sale);
                ps.setString(9 , maNV);
                ps.setString(10 , chucNang);
                ps.executeUpdate();                 
            }            
        } catch (SQLException ex) {
            System.out.println("Error luuLS in connect 2: " + ex.getMessage());
        }       
    }           
    
    private int getMaLSP(String loaiSP ){
        int maLSP = 0;
        String sql = "select MALSP from LOAISP where TENLSP = N'" + loaiSP + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                maLSP = rs.getInt("MALSP");
            }
        }catch(SQLException ex){
            System.out.println("Error 'getMaLSP': " + ex.getMessage());
        }
        return maLSP;
    }
    
    public int getMaDVT(String dvt){                        
        int maDVT = 0;
        String sql = "SELECT MADVT FROM DVT WHERE TENDVT = N'" + dvt + "'";
        try{            
            Connection cn = ConnectDB.SQLConnect(); 
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                maDVT = rs.getInt("MADVT");
            }                
        }catch(SQLException ex){
            System.out.println("Error 'getMaDVT': " + ex.getMessage());
        } 
        return maDVT;
    }
    
    private void handleLuuSanPham(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleLuuSanPham
        // TODO add your handling code here:
        int maNuoc = 0, maLSP = 0, maDVT = 0, soLuong = 0, donGia = 0, sale = 0;
        String tenNuoc = null;
        
        boolean valid_input = false, luu_ok = false;  
        
        if(staff.getMacv() == 1){
            //save NUOC
            //--------------
            if(add == true && change == false){               
                valid_input = false;
                if(kiemTraRong() == true){
                    if(kiemTraLoi() == true){
                        tenNuoc = txt_tenDoUong.getText().trim();
                        if(kiemTraTrungTenSP(tenNuoc)){
                            JOptionPane.showMessageDialog(this, "Tên sản phẩm '" + tenNuoc + "' đã tồn tại! Không thể thêm sản phẩm này!");
                        }else{
                            donGia = Integer.parseInt(txt_gia.getText().trim());
                            if(kiemTraGia(donGia) == true){                                
                                soLuong = Integer.parseInt(txt_soLuong.getText().trim());
                                sale = Integer.parseInt(txt_sale.getText().trim());
                                //get LOAINUOC
                                maLSP = getMaLSP(cbx_loaiDoUong.getSelectedItem().toString().trim());
                                maDVT = getMaDVT(cbx_dvt.getSelectedItem().toString().trim());
                                valid_input = true;
                            }                                
                        }                 
                    }                                
                }
                if(valid_input == true){          
                    themDoUong(maLSP, tenNuoc, maDVT, soLuong, donGia, sale);
                    
                    luuLS(maNuoc, maLSP, tenNuoc, maDVT, soLuong, donGia, sale, staff.getManv(), "Thêm");
                    JOptionPane.showMessageDialog(this, "Thêm đồ uống thành công");
                    
                    lamMoi();
                    tat();
                    this.layDoUong();
                    layLoaiNuocThem();
                    luu_ok = true;
                }
            }
            //chinh sua NUOC
            //----------------            
            if(change == true && add == false){
                if(kiemTraRong() == true){ 
                    if(kiemTraLoi() == true){
                        maNuoc = Integer.parseInt(txt_maDoUong.getText().trim());                                                                          
                        if(kiemTraTrungMaSP(maNuoc) == true){
                            tenNuoc = txt_tenDoUong.getText().trim();
                            if(kiemTraTrungTenSP(tenNuoc)){
                                JOptionPane.showMessageDialog(this, "Tên sản phẩm '" + tenNuoc + "' đã tồn tại ở sản phẩm khác! Cập nhật không thành công!\nHãy chọn tên khác!");
                            }else{
                                donGia = Integer.parseInt(txt_gia.getText().trim());
                                if(kiemTraGia(donGia) == true){                                                                  
                                    soLuong = Integer.parseInt(txt_soLuong.getText().trim());    
                                    sale = Integer.parseInt(txt_sale.getText().trim());
                                    //get LOAINUOC
                                    maLSP = getMaLSP(cbx_loaiDoUong.getSelectedItem().toString().trim());
                                    maDVT = getMaDVT(cbx_dvt.getSelectedItem().toString().trim());
                                    valid_input = true;
                                }                                
                            }                             
                        }else JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm có Mã " + maNuoc + " để cập nhật!");
                    }
                }
                if(valid_input == true){                       
                        String tenSPCu = null;
                        int maLoaiSPCu = 0, maDVTCu = 0, slCu = 0, giaCu = 0, saleCu = 0;
                        String sql = "SELECT * FROM SANPHAM";
                        try {
                            Connection cn = ConnectDB.SQLConnect();
                            PreparedStatement ps = cn.prepareStatement(sql);
                            ResultSet rs = ps.executeQuery();
                            if(rs.next()){
                                maLoaiSPCu = rs.getInt("MALSP");                                
                                tenSPCu = rs.getString("TENSP");
                                maDVTCu = rs.getInt("MADVT");
                                slCu = rs.getInt("SOLUONG");
                                giaCu = rs.getInt("DONGIA");      
                                saleCu = rs.getInt("GIAMGIA");
                            }                        
                            rs.close();
                            ps.close();
                            cn.close();
                        } catch (SQLException e) {
                            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
                        }
                        
                        boolean same = false;
                        if(tenSPCu != null && tenNuoc != null){
                            same = (maLoaiSPCu == maLSP && (tenSPCu.equals(tenNuoc)) && (maDVTCu == maDVT) && (slCu == soLuong) && (giaCu == donGia) && (saleCu == sale));
                        }                    

                        if(same == false){
                            chinhsuaDoUong(maNuoc, maLSP, tenNuoc, maDVT, soLuong, donGia, sale);
                            luuLS(maNuoc, maLSP, tenNuoc, maDVT, soLuong, donGia, sale, staff.getManv(), "Chỉnh sửa");
                            JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                            this.layDoUong();
                        }   
                    lamMoi();
                    tat();
                    layLoaiNuocThem();
                    luu_ok = true;
                }
            }
            if(luu_ok == true) startFunctionalButtons();
            //------------
        }else{
            JOptionPane.showMessageDialog(this, "Bạn không được quyền Thêm/Xóa/Sửa sản phẩm!");
        }
    }//GEN-LAST:event_handleLuuSanPham

    private void handleDoUongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleDoUongMouseClicked
        // TODO add your handling code here:
        cbx_loaiDoUong.removeAllItems();
        cbx_dvt.removeAllItems();
        int i = jTable_doUong.getSelectedRow();
        dtm =(DefaultTableModel) jTable_doUong.getModel();
        txt_maDoUong.setText(dtm.getValueAt(i,0).toString());
        cbx_loaiDoUong.addItem(dtm.getValueAt(i,1).toString());
        txt_tenDoUong.setText(dtm.getValueAt(i,2).toString());
        cbx_dvt.addItem(dtm.getValueAt(i,3).toString());
        txt_soLuong.setText(dtm.getValueAt(i,4).toString());        
        txt_gia.setText(dtm.getValueAt(i, 5).toString());
        txt_sale.setText(dtm.getValueAt(i, 6).toString());                       
    }//GEN-LAST:event_handleDoUongMouseClicked
    
    private void xoaDoUong(int maSP){        
        Connection cn = ConnectDB.SQLConnect();
        String sql =  "delete from SANPHAM where MASP = '" + maSP + "'";
        ConnectDB.queryUpdate(sql);      
    }
    
    private int laySoLuongTon(int ma){
        int sl_ton = 0;        
        String sql = "select SOLUONG from SANPHAM where MASP = N'" +ma+"'";
        try {
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                sl_ton = rs.getInt("SOLUONG");
            }
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return sl_ton;
    }
    
    private void handleXoaSanPham(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleXoaSanPham
        if(staff.getMacv() == 1){
            if(txt_maDoUong.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Hãy chọn đồ uống bạn muốn xóa!");
            }
            if(!txt_maDoUong.getText().equals("")){
                int maNuoc = Integer.parseInt(txt_maDoUong.getText());
                boolean xoa = false;
                int click, slt = laySoLuongTon(maNuoc);
                if(slt > 0){
                    click = JOptionPane.showConfirmDialog(this, "SỐ LƯỢNG TỒN LỚN HƠN 0. Bạn có muốn xóa đồ uống này không?", "Thông báo", 2);
                    if(click == JOptionPane.YES_OPTION){
                        xoa = true;
                    }
                    if(click == JOptionPane.CANCEL_OPTION){
                        xoa = false;
                    }
                }  
                if(slt == 0){
                    click = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa đồ uống này hay không?", "Thông báo", 2);
                    if(click == JOptionPane.YES_OPTION){
                        xoa = true;
                    }
                    if(click == JOptionPane.CANCEL_OPTION){
                        xoa = false;
                    }
                }
                
                if(xoa == true){
                    int maLSP = getMaLSP(cbx_loaiDoUong.getSelectedItem().toString().trim());
                    String tenNuoc = txt_tenDoUong.getText();
                    int maDVT = getMaDVT(cbx_dvt.getSelectedItem().toString().trim());
                    int soLuong = Integer.parseInt(txt_soLuong.getText());
                    int donGia = Integer.parseInt(txt_gia.getText());
                    int sale = Integer.parseInt(txt_sale.getText().trim());
                    
                    
                    luuLS(maNuoc, maLSP, tenNuoc, maDVT, soLuong, donGia, sale, staff.getManv(), "Xóa");
                    xoaDoUong(maNuoc);

                    lamMoi();
                    tat();
                    JOptionPane.showMessageDialog(this, "Xóa đồ uống thành công");               
                    this.layDoUong();
                    layLoaiNuocThem();
                }
                if(xoa == false){
                    lamMoi();
                    layLoaiNuocThem();
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Bạn không được quyền Xóa sản phẩm!");
        }
    }//GEN-LAST:event_handleXoaSanPham

    private void handleThemSanPham(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleThemSanPham
        if(staff.getMacv() == 1){
            lamMoi();
            add = true;
            change = false;
            loadLoaiSP();
            loadDVT();
            bat();
            
            btn_xoa.setEnabled(false);
            btn_chinhSua.setEnabled(false);
            btn_luu.setEnabled(true);
            txt_maDoUong.setEnabled(false);
            //get MASP next
//            Connection cn = ConnectDB.SQLConnect();
//            String sql = "SELECT dbo.FN_GETMADU_NEXT() AS MADU_NEXT";
//            try{
//                PreparedStatement ps = cn.prepareStatement(sql);
//                ResultSet rs = ps.executeQuery();
//                if(rs.next()) jTextField_maDoUong.setText(rs.getString("MADU_NEXT"));
//            }catch(SQLException ex){
//                System.out.println("Loi chon Them San phan: " + ex.getMessage());            
//            }
//            jTextField_maDoUong.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(this, "Bạn không được quyền Thêm sản phẩm!");
        }        
    }//GEN-LAST:event_handleThemSanPham

    private void handleHuy(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleHuy
        add = false;
        change = false;
        tat();
        lamMoi();
        startFunctionalButtons();
//        this.layDoUong();
//        layLoaiNuocThem();
    }//GEN-LAST:event_handleHuy

    private void handleThemLoaiSP(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleThemLoaiSP
        if(staff.getMacv() == 1){
            String new_lsp = (JOptionPane.showInputDialog("Nhập tên Loại đồ uống mới:"));
            if(new_lsp != null){
                if(new_lsp.equals("")){
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập vào ô trống!");
                    handleThemLoaiSP(evt);
                }else{ 
                    String pattern3 = "[a-zA-Z0-9ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúă"
                                    + "đĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤ"
                                    + "ỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ ]+";
                    if(new_lsp.trim().matches(pattern3)){
                        if(kiemTraTrungLoaiSP(new_lsp)){
                            JOptionPane.showMessageDialog(this, "Loại sản phẩm '" + new_lsp + "' đã tồn tại!\nThêm không thành công!");
                            handleThemLoaiSP(evt);
                        }else{
                            int click = JOptionPane.showConfirmDialog(this, "Xác nhận thêm Loại sản phẩm '" + new_lsp + "'?", "Xác nhận", 2);
                            if(click == JOptionPane.YES_OPTION){
                                Connection cn = ConnectDB.SQLConnect();
                                String sql = "INSERT INTO LOAISP(TENLSP) VALUES (N'" + new_lsp + "')";
                                ConnectDB.queryUpdate(sql);
                                loadLoaiSP();
                            }                                                        
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Loại đồ uống chỉ được nhập Chữ cái, Khoảng trắng và Số!");
                        handleThemLoaiSP(evt);
                    }                            
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Bạn không được quyền thực hiện chức năng này!");
        }
    }//GEN-LAST:event_handleThemLoaiSP

    private void handleThemDVT(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleThemDVT
        if(staff.getMacv() == 1){
            String new_dvt = (JOptionPane.showInputDialog("Nhập tên Đơn vị tính mới:"));
            if(new_dvt != null){
                if(new_dvt.equals("")){
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập vào ô trống!");
                    handleThemDVT(evt);
                }else{            
                    String pattern3 = "[a-zA-Z0-9ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúă"
                                    + "đĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤ"
                                    + "ỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ ]+";
                    if(new_dvt.trim().matches(pattern3)){
                        if(kiemTraTrungDVT(new_dvt)){
                            JOptionPane.showMessageDialog(this, "Đơn vị tính '" + new_dvt + "' đã tồn tại!\nThêm không thành công!");
                            handleThemDVT(evt);
                        }else{
                            int click = JOptionPane.showConfirmDialog(this, "Xác nhận thêm Đơn vị tính '" + new_dvt + "'?", "Xác nhận", 2);
                            if(click == JOptionPane.YES_OPTION){
                                String sql = "INSERT INTO DVT(TENDVT) VALUES (N'" + new_dvt + "')";
                                Connection cn = ConnectDB.SQLConnect();
                                ConnectDB.queryUpdate(sql);
                                loadDVT();
                            }
                        }                        
                    }else{
                        JOptionPane.showMessageDialog(this, "Đơn vị tính chỉ được nhập Chữ cái và Khoảng trắng!");
                        handleThemDVT(evt);
                    }                            
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Bạn không được quyền thực hiện chức năng này!");
        }
    }//GEN-LAST:event_handleThemDVT

    private void handleChinhSuaSanPham(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleChinhSuaSanPham
        if(staff.getMacv() == 1){
            add = false;
            change = true;
            bat();
            loadLoaiSP();
            loadDVT();
            
            txt_maDoUong.setEditable(false);
            btn_them.setEnabled(false);
            btn_xoa.setEnabled(false);
            btn_luu.setEnabled(true);
            
        }else{
            JOptionPane.showMessageDialog(this, "Bạn không được quyền Chỉnh sửa sản phẩm!");
        }
    }//GEN-LAST:event_handleChinhSuaSanPham
       
    private void layDoUong(){
        String sql= "SELECT SP.MASP, LSP.TENLSP, SP.TENSP, DT.TENDVT, SP.SOLUONG, SP.DONGIA, SP.GIAMGIA " +
                    "FROM SANPHAM AS SP, LOAISP AS LSP, DVT AS DT " +
                    "WHERE SP.MALSP = LSP.MALSP AND SP.MADVT = DT.MADVT";
        layDulieu(sql);
    }
    
    private int layDulieu(String sql){
        int count = 0;
        dtm = (DefaultTableModel)jTable_doUong.getModel();
        dtm.setNumRows(0);        
        
        Vector vt;
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                vt = new Vector();
                vt.add(rs.getString("MASP"));
                vt.add(rs.getString("TENLSP"));
                vt.add(rs.getString("TENSP"));
                vt.add(rs.getString("TENDVT"));
                vt.add(rs.getString("SOLUONG"));
                vt.add(rs.getString("DONGIA"));
                vt.add(rs.getString("GIAMGIA"));
                dtm.addRow(vt);
                count++;
            }
            jTable_doUong.setModel(dtm);
            rs.close();
            ps.close();
            cn.close();
        }
        catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return count;
    }
    
    public boolean kiemTraTrungLoaiSP(String loaiSP){
        String sql = "SELECT TENLSP FROM LOAISP WHERE TENLSP = N'" + loaiSP + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) return true;
        }catch(SQLException ex){
            System.out.println("Error 'kiemTraTrungLoaiSP': " + ex.getMessage());
        }
        return false;
    }
    
    public boolean kiemTraTrungDVT(String dvTinh){
        String sql = "SELECT TENDVT FROM DVT WHERE TENDVT= N'" + dvTinh + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) return true;
        }catch(SQLException ex){
            System.out.println("Error 'kiemTraTrungDVT': " + ex.getMessage());
        }
        return false;
    }
    
    public void startFunctionalButtons(){
        if(staff.getMacv() == 1){
            btn_them.setEnabled(true);
            btn_xoa.setEnabled(true);            
            btn_chinhSua.setEnabled(true);            
            btn_huy.setEnabled(true);
            btn_luu.setEnabled(false);
        }
        if(staff.getMacv() != 1){
            btn_them.setEnabled(false);
            btn_xoa.setEnabled(false);            
            btn_chinhSua.setEnabled(false);            
            btn_luu.setEnabled(false);
            btn_huy.setEnabled(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_chinhSua;
    private javax.swing.JButton btn_home;
    private javax.swing.JButton btn_huy;
    private javax.swing.JButton btn_luu;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_timKiem;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JComboBox<String> cbx_dvt;
    private javax.swing.JComboBox<String> cbx_loaiDoUong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_NV;
    private javax.swing.JLabel jLabel_chucNang;
    private javax.swing.JLabel jLabel_ten;
    private javax.swing.JLabel jLabel_thongTin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_thongTin;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_doUong;
    private javax.swing.JToggleButton jtb_addDVT;
    private javax.swing.JToggleButton jtb_addLoaiDoDuong;
    private javax.swing.JLabel lbl_TenNV;
    private javax.swing.JTextField txt_gia;
    private javax.swing.JTextField txt_maDoUong;
    private javax.swing.JTextField txt_sale;
    private javax.swing.JTextField txt_soLuong;
    private javax.swing.JTextField txt_tenDoUong;
    private javax.swing.JTextField txt_timKiem;
    // End of variables declaration//GEN-END:variables

    
}
