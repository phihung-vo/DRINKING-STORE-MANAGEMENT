/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlqcafe;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Math.abs;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nhom 40
 */
public class BanHang_2 extends javax.swing.JFrame implements Runnable,ActionListener{
    private final NguoiDung staff;
    HashMap<String, String> xacDinh = new HashMap<>();    
    JButton []ban=new JButton[Khung.soBanNgang*Khung.soBanDoc];
       
    private Thread thread;
    private boolean thanhToan;
    private static int num = 1;     
    private static int chon, i, item, itemGiaSP, itemMaSP;     
    private static String ma, gia, loai;
    public static DefaultTableModel dtm;    
    private final ImageIcon icon1=new ImageIcon(getClass().getResource("/Photo/coffee-table (1).png"));
    private final ImageIcon icon2=new ImageIcon(getClass().getResource("/Photo/coffee-table.png"));
    private final ImageIcon icon3=new ImageIcon(getClass().getResource("/Photo/coffee-table (3).png"));
    
    
    public BanHang_2(NguoiDung user) throws ParseException {
        initComponents();
        this.staff = user;
        jLabel_DIENTENNV.setText(staff.getHoten());
        setResizable(false);
        setLocationRelativeTo(this);        
        
        loadLoaiNuoc();        
        taoBan();
        veBan();
        layKhachDat();
        xemTinhTrangban();
        jLabel_ngay.setText(String.valueOf(new SimpleDateFormat("dd/MM/yyyy").format(new java.util.Date())));
        jLabel_gio.setText(String.valueOf(new SimpleDateFormat("HH:mm:ss").format(new java.util.Date())));
        Start();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_loaiNuoc = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jComboBox_tenNuoc = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextField_sl = new javax.swing.JTextField();
        jToggleButton_them = new javax.swing.JToggleButton();
        jToggleButton_xoa = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_doUong = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel_Ban = new javax.swing.JLabel();
        jToggleButton_thanhToan = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel_tongTien = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField_tienNhan = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel_tienThua = new javax.swing.JLabel();
        jLabel_trangThai = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel_ngay = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel_gio = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel_ban = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_khachDat = new javax.swing.JTable();
        jTextField_sdt_mb = new javax.swing.JTextField();
        jToggleButton_moban = new javax.swing.JToggleButton();
        jButton_troVe = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel_DIENTENNV = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jToggleButton_timkiem = new javax.swing.JToggleButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel_tb = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Edwardian Script ITC", 2, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quán Cafe");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 0, 320, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/coffee-table (3).png"))); // NOI18N
        jLabel2.setText("Bàn trống");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 75, 61));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/coffee-table (3).png"))); // NOI18N
        jLabel5.setText("Khách đặt");
        jLabel5.setEnabled(false);
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 490, 75, 61));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/coffee-table (1).png"))); // NOI18N
        jLabel6.setText("Đã có khách");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 490, 75, 61));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Loại đồ uống");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 47, -1, 28));

        jComboBox_loaiNuoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox_loaiNuocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jPanel5.add(jComboBox_loaiNuoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 49, 128, 28));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tên đồ uống");
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 95, 93, 31));

        jPanel5.add(jComboBox_tenNuoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 97, 155, 31));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Số lượng");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 148, 72, 30));

        jTextField_sl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_slKeyReleased(evt);
            }
        });
        jPanel5.add(jTextField_sl, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 151, 84, 30));

        jToggleButton_them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/plus.png"))); // NOI18N
        jToggleButton_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_themActionPerformed(evt);
            }
        });
        jPanel5.add(jToggleButton_them, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 218, 75, 121));

        jToggleButton_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/delete.png"))); // NOI18N
        jToggleButton_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_xoaActionPerformed(evt);
            }
        });
        jPanel5.add(jToggleButton_xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 218, 74, 121));

        jTable_doUong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên nước", "Số Lượng", "Thành tiền"
            }
        ));
        jTable_doUong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_doUongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_doUong);
        if (jTable_doUong.getColumnModel().getColumnCount() > 0) {
            jTable_doUong.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 12, 501, 193));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Bàn");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 70, 29));

        jLabel_Ban.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_Ban.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Ban.setText("0");
        jPanel5.add(jLabel_Ban, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 14, 48, 25));

        jToggleButton_thanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/pay (1).png"))); // NOI18N
        jToggleButton_thanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_thanhToanActionPerformed(evt);
            }
        });
        jPanel5.add(jToggleButton_thanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 218, 76, 121));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tổng tiền");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 223, 102, 41));

        jLabel_tongTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_tongTien.setText("0 VNĐ");
        jPanel5.add(jLabel_tongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 225, 175, 40));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Tiền nhận");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, 104, 41));

        jTextField_tienNhan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField_tienNhan.setText("0");
        jTextField_tienNhan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_tienNhanKeyReleased(evt);
            }
        });
        jPanel5.add(jTextField_tienNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 267, 169, 46));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Tiền thừa");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 271, 102, 41));

        jLabel_tienThua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_tienThua.setText("0 VNĐ");
        jPanel5.add(jLabel_tienThua, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 271, 175, 41));

        jLabel_trangThai.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel_trangThai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel5.add(jLabel_trangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 323, 235, 35));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/nv.png"))); // NOI18N
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(-230, 0, 1030, 370));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(651, 200, 800, 370));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Ngày");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 64, 36));

        jLabel_ngay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jLabel_ngay, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 102, 36));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Giờ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, 51, 36));

        jLabel_gio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(jLabel_gio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 280, 85, 36));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Nhân viên");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, 36));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/coffee-table.png"))); // NOI18N
        jLabel13.setText("Đang được chọn");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 490, -1, 61));

        jPanel_ban.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel_banLayout = new javax.swing.GroupLayout(jPanel_ban);
        jPanel_ban.setLayout(jPanel_banLayout);
        jPanel_banLayout.setHorizontalGroup(
            jPanel_banLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        jPanel_banLayout.setVerticalGroup(
            jPanel_banLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel_ban, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 400, 450));

        jTable_khachDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bàn", "Ngày đặt", "Khách Hàng", "SDT", "Thời Gian Đến", "Ghi chú"
            }
        ));
        jTable_khachDat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_khachDatMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_khachDat);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 500, 90));
        getContentPane().add(jTextField_sdt_mb, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 170, 30));

        jToggleButton_moban.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jToggleButton_moban.setText("Mở bàn");
        jToggleButton_moban.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton_moban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_mobanActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton_moban, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 30));

        jButton_troVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/smart-home (1).png"))); // NOI18N
        jButton_troVe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_troVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_troVeActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_troVe, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, 90, 70));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/nv.png"))); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 400, 80));

        jLabel_DIENTENNV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_DIENTENNV.setText("DIỀN TÊN NV");
        getContentPane().add(jLabel_DIENTENNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 370, 210, 40));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Số điện thoại khách hàng");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, -1));

        jLabel19.setText("sl khach dat");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        jToggleButton_timkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/search (1).png"))); // NOI18N
        jToggleButton_timkiem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToggleButton_timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_timkiemActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton_timkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, 40, 30));

        jLabel20.setText("sl khach dat");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, -1, -1));

        jLabel_tb.setText("jLabel22");
        getContentPane().add(jLabel_tb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/hinh-nen-mau-xanh-8.jpg"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1470, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private String catSo(String arry){
        return arry.replaceAll("[^\\d]+","");
    }
    
    private double chuyenThanhSo(String s){
        String number = "";
        String []array = s.replace(","," ").split("\\s");
        for(String i:array){
            number=number.concat(i);
        }
        return Double.parseDouble(number);
    }
    
    private String catChu(String arry){
        return arry.replaceAll("\\D+","");
    }
    
    private String chuyenDoi(String chuoi){
        DecimalFormat formatter = new DecimalFormat("###,###,###");
        String traVe = formatter.format(chuyenThanhSo(catChu(chuoi)));      
        return traVe;
    }
    
    private int layGio(String s){
        String []array=s.replace(":"," ").split("\\s");
        return Integer.parseInt(array[0]);
    }
    
    private int layPhut(String s){
        String []array=s.replace(":"," ").split("\\s");        
        return Integer.parseInt(array[1]);
    }
    
    private void Refresh(){
        thanhToan = false;
        jLabel_Ban.setText("0");
        jTextField_sl.setText("");
        jLabel_tongTien.setText("0 VNĐ");
        jTextField_tienNhan.setText("");
        jLabel_tienThua.setText("0 VNĐ");
    }
    
    private void kiemtraTrangThaiBan(){
        Connection cn = ConnectDB.SQLConnect();
        String queryString="EXEC SP_SEL_DATBAN";
        String day=jLabel_ngay.getText();
        try{
            PreparedStatement ps = cn.prepareStatement(queryString);
            ResultSet rsCheck = ps.executeQuery();
            while(rsCheck.next()){
                //tach ngay va thoi gio
                String ngayGioDen = rsCheck.getString("NGAYDEN");
                String[] tachNgayGio = ngayGioDen.split(" ");
                String ngayDen = tachNgayGio[0];
                String gioDen = tachNgayGio[1];
                //
                if(String.valueOf(ngayDen.trim()).equals(day)){
                    System.out.println(layGio(String.valueOf(gioDen.trim())));
                    switch (layGio(jLabel_gio.getText())-layGio(String.valueOf(gioDen.trim()))) {
                        case -1:
                            if( layPhut(gioDen.trim())<30 &&
                                    (60-layPhut(jLabel_gio.getText()))<=(15-layPhut(String.valueOf(gioDen.trim())))){

                                for (JButton jButton : ban) {
                                    if(jButton.getText().equals(String.valueOf(rsCheck.getInt("MABAN")))){
                                        jButton.setEnabled(false);
                                    }
                                }
                            }else {
                                for (JButton jButton : ban) {
                                    if(jButton.getText().equals(String.valueOf(rsCheck.getInt("MABAN")))){
                                        jButton.setEnabled(true);
                                    }
                                }
                            }   break;
                        case 0:
                            if(((layPhut(String.valueOf(gioDen.trim()))>=30 &&
                                    (layPhut(String.valueOf(gioDen.trim()))-layPhut(jLabel_gio.getText()))<=15)
                                    || (layPhut(String.valueOf(gioDen.trim()))<30 
                                    && abs((layPhut(jLabel_gio.getText())-layPhut(String.valueOf(gioDen.trim()))))<=15))
                                    ){
                                for (JButton jButton : ban) {
                                    if(jButton.getText().equals(String.valueOf(rsCheck.getInt("MABAN")))){
                                        jButton.setEnabled(false);
                                        
                                    }
                                }
                            }
                            else if((layPhut(jLabel_gio.getText())-layPhut(gioDen.trim()))>=30) {
                                for (JButton jButton : ban) {
                                    if(jButton.getText().equals(String.valueOf(rsCheck.getInt("MABAN")))){
                                        jButton.setEnabled(true);
                                    }
                                }
                            }   break;
                        case 1:
                            if(layPhut(String.valueOf(gioDen.trim()))>=30
                                    && ((60-layPhut(String.valueOf(gioDen.trim())))+layPhut(jLabel_gio.getText()))<15){
                                for (JButton jButton : ban) {
                                    if(jButton.getText().equals(String.valueOf(rsCheck.getInt("MABAN")))){
                                        jButton.setEnabled(false);
                                    }
                                }
                            }
                            else
                                if(((60-layPhut(gioDen.trim()))+layPhut(jLabel_gio.getText()))>=15 && layPhut(String.valueOf(gioDen.trim()))>=30){
                                    for (JButton jButton : ban) {
                                        if(jButton.getText().equals(String.valueOf(rsCheck.getInt("MABAN")))){
                                            jButton.setEnabled(true);
                                        }
                                    }
                                }   break;
                        default:
                            break;
                    }
                }
            }
        }
        catch(SQLException ex){
            System.out.println("Error KiemTraTrangThaiBan: " + ex.getMessage());
        }        
    }
    
    private void lamMoiGoiDoUong(){        
        jTextField_sl.setText("");        
    }
    
    private void loadLoaiNuoc(int pos){
        Connection cn = ConnectDB.SQLConnect();  
        String sql = "select * FROM LOAISP";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);               
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jComboBox_loaiNuoc.addItem(rs.getString("TENLSP"));
                jComboBox_loaiNuoc.setSelectedIndex(pos);
                pos = rs.getInt("MALSP");
            }
            System.out.println(pos);
            
        } catch (Exception e) {
            e.getMessage();
        }
    }
    
    private void loadLoaiNuoc(){
        Connection cn = ConnectDB.SQLConnect();  
        String sql = "SELECT * FROM LOAISP";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);               
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                jComboBox_loaiNuoc.addItem(rs.getString("TENLSP"));
                item = this.jComboBox_loaiNuoc.getSelectedIndex();
            }
            System.out.println(jComboBox_loaiNuoc.getSelectedItem());
        } catch (Exception e) {
            e.getMessage();
        }
    }
    
    private void layTenNuoc(){
        Connection cn = ConnectDB.SQLConnect();  
        String sql = "SELECT DISTINCT * FROM SANPHAM s, LOAISP l WHERE l.MALSP = s.MALSP AND l.MALSP = '"+item+"'";
        System.out.println(sql);
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                this.jComboBox_tenNuoc.addItem(rs.getString("TENSP"));
            }
            rs.close();
            ps.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    
    private void taoBan(){
        int count=1;        
        JButton oldButton=new JButton();
        oldButton.setBounds(0,10,0,0);
        for(int i = 0; i < Khung.soBanDoc; i++){
            for(int j = 0; j < Khung.soBanNgang; j++){
                
                JButton button = new JButton(""+count,icon3);
                button.setHorizontalTextPosition(JButton.CENTER);
                button.setVerticalTextPosition(JButton.BOTTOM);
                
                button.setBounds(oldButton.getX()+oldButton.getWidth()+7, oldButton.getY(), Khung.Button_Width, Khung.Button_Height);
                button.addActionListener(this);
                
                oldButton.setBounds(button.getX(),button.getY() , button.getWidth()+Khung.distance, button.getHeight()+Khung.distance);
                
                ban[count-1]=button;
                count++;
            }
            oldButton.setBounds(0, oldButton.getY()+oldButton.getHeight(), 0, 0);
        }        
    }
    
    private void veBan(){
        for (JButton jButton : ban) {
            jPanel_ban.add(jButton);
        }
    }
   
    private void xemTinhTrangban(){
        Connection cn = ConnectDB.SQLConnect();       
        try {
            for (JButton jButton : ban) {
               
                String sql = "SELECT * FROM BAN WHERE TRANGTHAIRONG = '0' AND MABAN = '"+jButton.getText()+"'";
                PreparedStatement ps = cn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    jButton.setIcon(icon1);
                }
                else jButton.setIcon(icon3);
                ps.close();
                rs.close();
            }
        }
        catch (SQLException ex) {
            System.out.println("Error xemTinhTrangBan: " + ex.getMessage());
        }
    }
    
    private void layDuLieu(String sql){        
        dtm = (DefaultTableModel)jTable_doUong.getModel();
        dtm.setNumRows(0);        
        
        int count = 1;
        Vector vt ;
        try
        {
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                vt = new Vector();
                vt.add(count);
                vt.add(rs.getString("TENNUOC"));
                vt.add(rs.getString("SOLUONG"));
                vt.add(rs.getString("THANHTIEN"));
                count++;
                dtm.addRow(vt);
            }
            jTable_doUong.setModel(dtm);
            rs.close();
            ps.close();
            cn.close();
        }
        catch(Exception e){
             Logger.getLogger(BanHang_2.class.getName()).log(Level.SEVERE, null, e);
        }       
    } 
    
    private void layKhachDat() throws ParseException{
        dtm = (DefaultTableModel)jTable_khachDat.getModel();
        dtm.setNumRows(0);
        Connection cn = ConnectDB.SQLConnect();
        Date currentDate = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm");
        SimpleDateFormat sdf1 = new SimpleDateFormat("HH:mm");
        String sql = "EXEC SP_SEL_DATBAN";
        Vector vt;
        try{
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                String gio = rs.getString("THOIGIAN");
                String ngay = rs.getString("NGAYDAT");
                String ngayGio = ngay +" "+gio;   
                Date date = sdf.parse(ngayGio);
                Date date1 =sdf.parse(sdf.format(currentDate));
                Date date2 = sdf1.parse(sdf1.format(currentDate));
                Date date3 = sdf1.parse(gio);
                if(date.getTime() - date1.getTime() == 0 ){   
                    if(((date3.getTime() - date2.getTime() >= 0) || date2.getTime() - date3.getTime() <=1800000)) {   
                        vt = new Vector();
                        vt.add(rs.getInt("MABAN"));
                        vt.add(rs.getString("NGAYDAT"));
                        vt.add(rs.getString("TENKH"));
                        vt.add(rs.getString("SDT"));
                        vt.add(rs.getString("NGAYDEN"));
                        vt.add(rs.getString("GHICHU"));
                        dtm.addRow(vt);
                    }                   
                }
            }
            jTable_khachDat.setModel(dtm);
            rs.close();
            ps.close();
            cn.close();
        } catch(Exception e){
             Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
//    private String layMaNuoc(){        
//        Connection cn = ConnectDB.SQLConnect();
//        String sql ="SELECT s.TENSP, l.TENLSP FROM SANPHAM s, LOAISP l WHERE l.MALSP = s.MALSP AND l.TENLSP = N'"+jComboBox_loaiNuoc.getSelectedItem()+"'";
//        try {
//            PreparedStatement ps = cn.prepareStatement(sql);
//            ResultSet rs = ps.executeQuery();
//            while(rs.next()){
//                ma = rs.getString("MALSP").toString();
//            }
//            rs.close();
//            ps.close();
//            cn.close();
//        } catch (SQLException e) {
//              Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
//        }
//        return ma;
//    }
    
    private boolean themTrungBanNuoc(String ma){        
        boolean trung = false;      
        String sql = "select * from SANPHAM where MABAN = "+jLabel_Ban.getText();
        try {
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){             
                if(rs.getString("MASP").equals(ma)){
                    trung = true;
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return trung;        
    }
    
    private boolean themTrungHoaDon(){
        boolean trung = false;
        Connection cn = ConnectDB.SQLConnect();
        String sql = "select * from HOADON where MABAN = "+jLabel_Ban.getText();
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                if(rs.getString("TENSP").equals(jComboBox_tenNuoc.getSelectedItem())){                   
                    trung = true;
                }         
            }
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }        
        return trung;       
    }
    
//    private void themNuoc(){
////        String ma = layMaNuoc();     
//        int masp = layMaSP();
//        String ma = String.valueOf(masp);
//        if(themTrungBanNuoc(ma) == false){
//            String sql = "insert into BANNUOC (BAN,MANUOC) values("+jLabel_Ban.getText()+",'" +ma+"')";
//            try {
//                Connection cn = ConnectDB.SQLConnect();
//                PreparedStatement ps = cn.prepareStatement(sql);
//                ps.executeUpdate();
//                ps.close();
//                cn.close();
//            } 
//            catch (SQLException e) {
//                 Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
//            }
//        }
//    }
   
//    private String layGiaSP(){        
//        String ma = layMaNuoc();        
//        String sql = "select * from QLNuoc where MANUOC = '" +ma+"'";
//        try {
//            Connection cn = ConnectDB.SQLConnect();
//            PreparedStatement ps = cn.prepareStatement(sql);
//            ResultSet rs = ps.executeQuery();
//            while(rs.next()){
//                gia = rs.getString("GIA").toString();                
//            }
//            rs.close();
//            ps.close();
//            cn.close();
//        } catch (SQLException e) {
//             Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);        
//        }
//        return gia;
//    }
//    
//    
    private int laySoLuongMua(){
        int sl = 0;
        int masp = layMaSP();
        Connection cn = ConnectDB.SQLConnect();
//        String sql = "select * from HOADON where MABAN = "+jLabel_Ban.getText()+" and TENSP = N'"
//                +jComboBox_tenNuoc.getSelectedItem()+"'";
        String sql = "SELECT SOLUONG FROM HOADON WHERE MABAN = "+jLabel_Ban.getText()+" AND MASP = "+masp;
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                String luong =  rs.getString("SOLUONG");
                sl = Integer.parseInt(luong);
            }
        } catch (NumberFormatException | SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return sl;
    }
    
    private int layGiaSP(){
        Connection cn = ConnectDB.SQLConnect(); 
        String sql = "SELECT DONGIA FROM SANPHAM WHERE TENSP = N'"+jComboBox_tenNuoc.getSelectedItem()+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);               
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                itemGiaSP = rs.getInt("DONGIA");
            }
            ps.close();
            rs.close();
            cn.close();
        } catch (Exception e) {
            e.getMessage();
        }
        return itemGiaSP;
    }
    
    private int layMaSP(){
        Connection cn = ConnectDB.SQLConnect(); 
        String sql = "SELECT MASP FROM SANPHAM WHERE TENSP = N'"+jComboBox_tenNuoc.getSelectedItem()+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);               
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                itemMaSP = rs.getInt("MASP");
            }
            ps.close();
            rs.close();
            cn.close();
        } catch (Exception e) {
            e.getMessage();
        }
        return itemMaSP;
    }
    
    private void themHoaDon(){
        if(themTrungHoaDon()== false){   
//            String gia = layGiaSP();
//            String[] tGia = gia.split(" ");
//            String num  =catSo(tGia[0]);
//            int tien = Integer.parseInt(num);
//            int tt =  Integer.parseInt(jTextField_sl.getText());
//            int tongTT  = tien*tt;
//
//            String thanhTien = String.valueOf(tongTT);
//            String ttien = chuyenDoi(thanhTien);
            
            int ggia = layGiaSP();
            int masp = layMaSP();
            int sl = Integer.parseInt(jTextField_sl.getText().toString());
            int thanhtien = ggia*sl;
            
//            String sql = "insert into HOADON (TENNUOC ,SOLUONG, BAN,THANHTIEN) values(N'"+jComboBox_tenNuoc.getSelectedItem()
//                    +"' ,"+jTextField_sl.getText()+" ,"
//                    +jLabel_Ban.getText()+",'"+ttien+" VNĐ"+"')";
            String sql = "INSERT INTO HOADON(MASP,MABAN,SLMUA,THANHTIEN)"
                    +"VALUES("+masp+","+jLabel_Ban.getText()+","+sl+","+thanhtien+")";
            try {
                Connection cn = ConnectDB.SQLConnect();
                PreparedStatement ps = cn.prepareStatement(sql);
                ps.executeUpdate();
                ps.close();
                cn.close();
            } catch (Exception e) {
                 Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
            }
        }else{
//            String gia = layGiaSP();
//            String[] tGia = gia.split(" ");
//            String num  =catSo(tGia[0]);
//            int tien = Integer.parseInt(num);
//            System.out.println("tien "+ tien);
//            int tt =  Integer.parseInt(jTextField_sl.getText());
            int ggia = layGiaSP();
            int masp = layMaSP();
            int sl = Integer.parseInt(jTextField_sl.getText().toString());
            int thanhtien = ggia*sl;
            
            int tt1 = thanhtien + laySoLuongMua();
            System.out.println("tong sl "+ tt1 );
            String slg = String.valueOf(tt1);
            
//            int tongTT  = tien*tt1;
//            System.out.println("tong tien "+ tongTT);
//            String thanhTien = String.valueOf(tongTT);
//            String ttien = chuyenDoi(thanhTien);

            Connection cn = ConnectDB.SQLConnect();
            String sql = "update HOADON set SLMUA = '"+sl+"', THANHTIEN = '"+thanhtien+"' where MABAN = '"+jLabel_Ban.getText()+"'"
                        +"AND MASP ='"+masp+"'";
//            String sql = "update HOADON set SOLUONG = '"+sl+"' , THANHTIEN = '" +thanhtien+" VNĐ' where BAN = "
//                    +jLabel_Ban.getText() +" and TENNUOC = N'"+jComboBox_tenNuoc.getSelectedItem()+"'";
            try {
                try (PreparedStatement ps = cn.prepareStatement(sql)) {
                    ps.executeUpdate();
                }
                cn.close();
            } catch (SQLException e) {
                 Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);

            }
        }
    }
    private void jComboBox_loaiNuocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox_loaiNuocPopupMenuWillBecomeInvisible
        jComboBox_tenNuoc.removeAllItems();
        Connection cn = ConnectDB.SQLConnect();
        String sql = "SELECT s.TENSP, l.TENLSP FROM SANPHAM s, LOAISP l WHERE l.MALSP = s.MALSP AND l.TENLSP = N'"+jComboBox_loaiNuoc.getSelectedItem().toString()+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                this.jComboBox_tenNuoc.addItem(rs.getString("TENSP"));
            }
            rs.close();
            ps.close();
            cn.close();
        } catch (SQLException e) {
             Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jComboBox_loaiNuocPopupMenuWillBecomeInvisible
    private void tinhTongTien(){
       
        Connection cn = ConnectDB.SQLConnect();
        Double tong = 0.0;
        DecimalFormat formatter = new DecimalFormat("###,###,###");
        String sql="select * from HOADON where MABAN = "+ jLabel_Ban.getText();
        
        try{
           PreparedStatement ps = cn.prepareStatement(sql);
           ResultSet rs = ps.executeQuery();
           while(rs.next()){
                String s1=rs.getString("THANHTIEN").trim();
                String[] s2 = s1.split("\\s");
                Double totalMoney =chuyenThanhSo(s2[0]);
                tong += totalMoney;               
            }
                jLabel_tongTien.setText(formatter.format(tong)+" "+"VNĐ");
        }
        catch(SQLException ex){
            System.out.println("Error tinhTongTien: " + ex.getMessage());
        }
    }
    
    private void capNhatLaiSL(){
        Connection cn = ConnectDB.SQLConnect();
//        String ma = layMaNuoc();
        int masp = layMaSP();
        String sql = "select * from SANPHAM where MASP = '"+masp+"'";
        try{
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                int sl = rs.getInt("SOLUONG");
                sl -= Integer.parseInt(jTextField_sl.getText());
                String sql1 = "update SANPHAM set SOLUONG = "+sl+ " where MASP = '"+ masp+"'";
                PreparedStatement ps1= cn.prepareStatement(sql1);
                ps1.executeUpdate();
            }
            rs.close();
            ps.close();
            cn.close();
        }
        catch(NumberFormatException | SQLException ex){
            System.out.println("Error capNhatSL: " + ex.getMessage());
        }       
    }
    
    private void capNhatLaiSLSauXoa(){
        Connection cn = ConnectDB.SQLConnect();
//        String ma = layMaNuoc();
        int masp = layMaSP();
        String sql = "select * from SANPHAM where MASP = '"+masp+"'";
        try{
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                int sl = rs.getInt("SOLUONG");
                sl += Integer.parseInt(jTextField_sl.getText());
                String sql1 = "update SANPHAM set SOLUONG = "+sl+ " where MASP = '"+ masp+"'";
                PreparedStatement ps1= cn.prepareStatement(sql1);
                ps1.executeUpdate();
            }
            rs.close();
            ps.close();
            cn.close();            
        }
        catch(NumberFormatException | SQLException ex){
            System.out.println("Error capNhatSLSauXoa: " + ex.getMessage());
        }
    }
    
    private void jToggleButton_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_themActionPerformed
        
//        themNuoc();
        themHoaDon();
        String sql = "select * from HOADON where MABAN = "+jLabel_Ban.getText();
        layDuLieu(sql);
        tinhTongTien();
        capNhatLaiSL();
        xemTinhTrangban();
        lamMoiGoiDoUong();
               
    }//GEN-LAST:event_jToggleButton_themActionPerformed
    
    private String layMa(int item){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "select * from SANPHAM where MALSP = N'"+item+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next())
            {
                loai= rs.getString("TENSP");
            }
            rs.close();
            ps.close();
            cn.close();
        } catch (SQLException e) {
             Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return loai;
    }
    
    private void jTable_doUongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_doUongMouseClicked
        // TODO add your handling code here:
        
//        jComboBox_loaiNuoc.removeAllItems();
//        jComboBox_tenNuoc.removeAllItems();
//        int i = jTable_doUong.getSelectedRow();
//        dtm =(DefaultTableModel) jTable_doUong.getModel();
//        
//        String ma = layMa(dtm.getValueAt(i, 1).toString());
//        
//        switch (ma) {
//            case "Cafe":
//                loadLoaiNuoc(0);
//                break;
//            case "Sinh Tố":
//                loadLoaiNuoc(1);
//                break;
//            default:
//                loadLoaiNuoc(2);
//                break;
//        }
//        jComboBox_tenNuoc.addItem(dtm.getValueAt(i, 1).toString());
//        jTextField_sl.setText(dtm.getValueAt(i,2).toString());
       
    }//GEN-LAST:event_jTable_doUongMouseClicked
   
    private void XoaBanNuoc(){
        if(jTable_doUong.getSelectedRow() != -1){   
//            String maNuoc = layMaNuoc();
            int masp = layMaSP();
            Connection cn = ConnectDB.SQLConnect();
            String sql1 = "delete * from SANPHAM where MABAN = " + jLabel_Ban.getText()+
                    " and MASP = '"+masp+"'";
            try {
                PreparedStatement ps1 = cn.prepareStatement(sql1);
                ps1.executeUpdate();
                ps1.close();
                cn.close();
            } catch (Exception ex) {
                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
           JOptionPane.showMessageDialog(this, "Hãy chọn đồ uống(trên bảng) mà khách hàng hủy");          
        }
    }
    
    private void XoaHoaDon(){
        if(jTable_doUong.getSelectedRow() != -1){ 
            Connection cn = ConnectDB.SQLConnect();
            String sql = "delete from HOADON where MABAN = " +jLabel_Ban.getText()+" and TENNUOC = N'"
                    +jComboBox_tenNuoc.getSelectedItem()+"'";
            try {
                PreparedStatement ps = cn.prepareStatement(sql);
                ps.executeUpdate();
                ps.close();
                cn.close();
            } catch (SQLException ex) {
                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    private void jToggleButton_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_xoaActionPerformed
 
        XoaHoaDon();
        XoaBanNuoc();
        String sql = "SELECT * FROM HOADON where MABAN = "+jLabel_Ban.getText();
        layDuLieu(sql);
        tinhTongTien();
        capNhatLaiSLSauXoa();
            
    }//GEN-LAST:event_jToggleButton_xoaActionPerformed
  
    private void jTextField_slKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_slKeyReleased
        // TODO add your handling code here:
       Connection cn = ConnectDB.SQLConnect();
       String sql ="select * from SANPHAN where TENLSP = N'" +jComboBox_tenNuoc.getSelectedItem()+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                if((rs.getInt("SOLUONG")- Integer.parseInt(jTextField_sl.getText())) < 0){
                    JOptionPane.showMessageDialog(this, "Số lượng vượt quá số lượng hiện có");                    
                }
            }
        } catch (HeadlessException | NumberFormatException | SQLException ex) {
             Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField_slKeyReleased
    
    private void themTTHD(){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "insert into THONGTINHOADON (BAN ,TONGTIEN ,TIENNHAN,TIENTHUA,TENNV,NGAY,THOIGIAN)"
                + " values("+jLabel_Ban.getText()+" ,N'"+jLabel_tongTien.getText()+"' , N'"+jTextField_tienNhan.getText()+ " VNĐ'"
                +", N'"+jLabel_tienThua.getText()+"' , N'"+staff.getHoten()+"' , '"+jLabel_ngay.getText()+"','"
                +jLabel_gio.getText()+"')";
         
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();
            ps.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }                 
    }
    
    private void themThongKe(){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "insert into THONGKE (BAN ,TONGTIEN ,TIENNHAN,TIENTHUA,TENNV,NGAY,THOIGIAN)"
                + " values("+jLabel_Ban.getText()+" ,N'"+jLabel_tongTien.getText()+"' , N'"+jTextField_tienNhan.getText()+ " VNĐ"
                +"' , N'"+jLabel_tienThua.getText()+"' , N'"+staff.getHoten()+"' , '"+jLabel_ngay.getText()+"','"
                +jLabel_gio.getText()+"')";

        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();
            ps.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);

        }                 
    }
    
    private void xoaHoaDonThanhToan(){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "delete from HOADON where MABAN = "+jLabel_Ban.getText();
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();
            ps.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void xoaBanNuocThanhToan(){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "delete from BANNUOC where MABAN = "+jLabel_Ban.getText();
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();
            ps.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void setIcon(String i){
        for (JButton jButton : ban) {
            if(jButton.getText().equals(i)) jButton.setIcon(icon3);
        }
    }
    
    private void capNhatLaiBanDat(String ban , String ngay , String gio){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "update DATBAN set THANHTOAN = 'Có' where MABAN = "+ban+ " and NGAYDEN = '"+ngay+"' and THOIGIAN = '" +gio+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();            
            ps.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void jToggleButton_thanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_thanhToanActionPerformed
    
        if(thanhToan == true){ 
            String sql = "select * from HOADON where MABAN = "+jLabel_Ban.getText();
            themTTHD();
            themThongKe();
            layDuLieu(sql);
            String gio = xacDinh.get(jLabel_Ban.getText());
            capNhatLaiBanDat(jLabel_Ban.getText(),jLabel_ngay.getText(), gio);
            xacDinh.remove(jLabel_Ban.getText());
            setIcon(jLabel_Ban.getText());
            xoaBanNuocThanhToan();
            xoaHoaDonThanhToan();
            JOptionPane.showMessageDialog(this, "Thanh toán thành công");
            Refresh();
        }
        else if(thanhToan==false){
            JOptionPane.showMessageDialog(this, "Thanh toán không thành công");
        }
    }//GEN-LAST:event_jToggleButton_thanhToanActionPerformed

    private void jToggleButton_mobanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_mobanActionPerformed
        
        Connection cn = ConnectDB.SQLConnect();
        int i = jTable_khachDat.getSelectedRow();
        dtm =(DefaultTableModel) jTable_khachDat.getModel();

        if(!jTextField_sdt_mb.getText().equals("")){                        
            String sdt = dtm.getValueAt(i,1).toString().trim();   

            if(jTextField_sdt_mb.getText().equals(sdt)){
//                jLabel_tb.setText("");
                String ban = dtm.getValueAt(i,2).toString();
                String ngay = dtm.getValueAt(i,3).toString();
                String gio = dtm.getValueAt(i,4).toString();
                 xacDinh.put(ban, gio);
                String sql = "update DATBAN set DADEN = N'Có' where BAN = "+ban+" and NGAY = '"+ngay+"' and "
                       + "THOIGIAN = '"+gio+"'";

                try {
                    PreparedStatement ps = cn.prepareStatement(sql);
                    ps.executeUpdate();

                    ps.close();
                    cn.close();
                } catch (SQLException e) {
                    Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, e);
                }
            }

        }else{
            jLabel_tb.setText("Bạn phải chọn khách hàng để mở bàn");
        }
        try {
            layKhachDat();
            jTextField_sdt_mb.setText("");
        } catch (ParseException ex) {
            Logger.getLogger(BanHang_2.class.getName()).log(Level.SEVERE, null, ex);
        }
         
        cn = ConnectDB.SQLConnect();
        i = jTable_khachDat.getSelectedRow();
        dtm =(DefaultTableModel) jTable_khachDat.getModel();
        if(!jTextField_sdt_mb.getText().equals("")){

            String sdt = dtm.getValueAt(i,1).toString().trim();
            if(jTextField_sdt_mb.getText().equals(sdt)){
                jLabel_tb.setText("");
                String ban = dtm.getValueAt(i,2).toString();
                String ngay = dtm.getValueAt(i,3).toString();
                String gio = dtm.getValueAt(i,4).toString();
                xacDinh.put(ban, gio);
                String sql = "update DATBAN set TRANGTHAIDEN = '1' where MABAN = "+ban+" and NGAYDEN = '"+ngay+"' and "
                       + "THOIGIAN = '"+gio+"'";

                try {
                    PreparedStatement ps = cn.prepareStatement(sql);
                    ps.executeUpdate();

                    ps.close();
                    cn.close();
                } catch (SQLException e) {
                    Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        }else{
            jLabel_tb.setText("Bạn phải chọn khách hàng để mở bàn");
        }
        try {
            layKhachDat();
            jTextField_sdt_mb.setText("");
        } catch (ParseException ex) {
            Logger.getLogger(BanHang_2.class.getName()).log(Level.SEVERE, null, ex);
        }      
    }//GEN-LAST:event_jToggleButton_mobanActionPerformed

    private void jTable_khachDatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_khachDatMouseClicked
        int i = jTable_khachDat.getSelectedRow();
        dtm =(DefaultTableModel) jTable_khachDat.getModel();
        jTextField_sdt_mb.setText(dtm.getValueAt(i,3).toString());
        
    }//GEN-LAST:event_jTable_khachDatMouseClicked

    private void jTextField_tienNhanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_tienNhanKeyReleased
         DecimalFormat formatter = new DecimalFormat("###,###,###");
        
        jTextField_tienNhan.setText(catChu(jTextField_tienNhan.getText()));
        
        if(jTextField_tienNhan.getText().equals("")){
            String []s=jLabel_tongTien.getText().split("\\s");
            jLabel_tienThua.setText("0"+" "+s[1]);
        }
        else{
           jTextField_tienNhan.setText(formatter.format(chuyenThanhSo(jTextField_tienNhan.getText())));
            
            String s1=jTextField_tienNhan.getText();
            String[] s2=jLabel_tongTien.getText().split("\\s");
            
            if((chuyenThanhSo(s1)-chuyenThanhSo(s2[0]))>=0){
                jLabel_tienThua.setText(formatter.format((chuyenThanhSo(s1)-chuyenThanhSo(s2[0])))+" "+s2[1]);
              
                jLabel_trangThai.setText("Số tiền nhận hợp lệ");
                thanhToan=true;
            }
            else {
                
                jLabel_tienThua.setText(formatter.format((chuyenThanhSo(s1)-chuyenThanhSo(s2[0])))+" "+s2[1]);
                jLabel_trangThai.setText("Số tiền nhận không hợp lệ");
                 thanhToan=false;
            }
        }
    }//GEN-LAST:event_jTextField_tienNhanKeyReleased

    private void jButton_troVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_troVeActionPerformed
        if(staff.getMacv() == 1){
            GiaoDienChung gdc = new GiaoDienChung(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }
        if(staff.getMacv() == 2){
            GiaoDienNhanVien gdc = new GiaoDienNhanVien(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }        
    }//GEN-LAST:event_jButton_troVeActionPerformed

    private void jToggleButton_timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_timkiemActionPerformed
        // TODO add your handling code here:
        Connection cn = ConnectDB.SQLConnect();
        String sql ="SP_SEL_TIMKIEM_DATBAN N'%"+jTextField_sdt_mb.getText()+"%', N'%"+jTextField_sdt_mb.getText()+"%'";
        layDuLieu(sql);
        jTextField_sdt_mb.setText("");
    }//GEN-LAST:event_jToggleButton_timkiemActionPerformed
   
    private void Update(){
        jLabel_gio.setText(String.valueOf(new SimpleDateFormat("HH:mm:ss").format(new java.util.Date())));
        kiemtraTrangThaiBan();
    }
    
    private void updateTTR(int ttr, Object maban){
        Connection cn = ConnectDB.SQLConnect();
        String sql = "UPDATE BAN SET TRANGTHAIRONG = '"+ttr+"' WHERE MABAN = '"+maban+"'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.executeUpdate();
            
            ps.close();
            cn.close();
        } catch (Exception e) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, e); 
        }
    }
    
    private void Start(){
        if(thread==null){
            thread = new Thread(this);
            thread.start();
        }
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton_troVe;
    private javax.swing.JComboBox<String> jComboBox_loaiNuoc;
    private javax.swing.JComboBox<String> jComboBox_tenNuoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Ban;
    private javax.swing.JLabel jLabel_DIENTENNV;
    private javax.swing.JLabel jLabel_gio;
    private javax.swing.JLabel jLabel_ngay;
    private javax.swing.JLabel jLabel_tb;
    private javax.swing.JLabel jLabel_tienThua;
    private javax.swing.JLabel jLabel_tongTien;
    private javax.swing.JLabel jLabel_trangThai;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel_ban;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_doUong;
    private javax.swing.JTable jTable_khachDat;
    private javax.swing.JTextField jTextField_sdt_mb;
    private javax.swing.JTextField jTextField_sl;
    private javax.swing.JTextField jTextField_tienNhan;
    private javax.swing.JToggleButton jToggleButton_moban;
    private javax.swing.JToggleButton jToggleButton_thanhToan;
    private javax.swing.JToggleButton jToggleButton_them;
    private javax.swing.JToggleButton jToggleButton_timkiem;
    private javax.swing.JToggleButton jToggleButton_xoa;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while(true){
             
        Update();  
       
            try{
                Thread.sleep(1);  
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }   

    @Override
    public void actionPerformed(ActionEvent e) {
        Connection cn = ConnectDB.SQLConnect();
        Date currentDate = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy kk:mm");
        String ngayGio = jLabel_ngay.getText()+" "+jLabel_gio.getText();
        try {
            Date date =sdf.parse(sdf.format(currentDate));
            System.out.println(((JButton)e.getSource()).getText());
            System.out.println(date.toString());
            String sqlBan = "SELECT MABAN, THOIGIAN, NGAYDAT, TENKH, SDT, FORMAT(NGAYDEN,'dd-MM-yyyy HH:mm')AS NGAYDEN, GHICHU"
                            +"FROM  DATBAN"
                            +"WHERE MABAN = "+((JButton)e.getSource()).getText()
                            +"AND   NGAYDEN = CONVERT(datetime,'"+ngayGio+"',103)";
            try {
                PreparedStatement ps = cn.prepareStatement(sqlBan);
                ResultSet rs = ps.executeQuery();   
                while(rs.next())
                {
                    if(rs.getString("TRANGTHAIDEN").toString().equals("0") && rs.getString("THANHTOAN").toString().equals("0") == false) 
                    {

                        String sql="SELECT * FROM HOADON WHERE MABAN="+((JButton)e.getSource()).getText()+"";
                        layDuLieu(sql);

                        xemTinhTrangban();

                        ((JButton)e.getSource()).setIcon(icon2);
                        jLabel_Ban.setText(((JButton)e.getSource()).getText());
                        tinhTongTien();

                    }
                }
                if(!rs.next())
                {
                    if(!((JButton)e.getSource()).getText().equals("26") && !((JButton)e.getSource()).getText().equals("27")
                        && !((JButton)e.getSource()).getText().equals("28") && !((JButton)e.getSource()).getText().equals("29")
                        && !((JButton)e.getSource()).getText().equals("30") )
                    {
                        String sql="SELECT * FROM HOADON WHERE MABAN="+((JButton)e.getSource()).getText()+"";
                        layDuLieu(sql);

                        xemTinhTrangban();
                        ((JButton)e.getSource()).setIcon(icon2);
                        jLabel_Ban.setText(((JButton)e.getSource()).getText());
                        tinhTongTien();
                    }
                }
                else {

                    jLabel_Ban.setText("0");
                }
            } catch (SQLException ex) {
                Logger.getLogger(BanHang_2.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ParseException ex) {
            Logger.getLogger(BanHang_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    NguoiDung staff = new NguoiDung();                
                    staff.setManv("NV01");
                    staff.setHoten("admin");
                    staff.setTendn("admin");
                    staff.setMacv(1);
                    new BanHang_2(staff).setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(BanHang_2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
}

