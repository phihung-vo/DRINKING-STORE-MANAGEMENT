/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlqcafe;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nhom 40
 */
public class NhanVien extends javax.swing.JFrame {
    private final NguoiDung staff;  
    private boolean add = false, change = false;
    private static DefaultTableModel dtm;
    
    public NhanVien(NguoiDung user) {        
        initComponents();
        this.staff = user;
        setResizable(false);
        setLocationRelativeTo(this);
        layNV();
        tat();
        startFunctionalButtons();
        jdc_ngaySinh.setDateFormatString("dd/MM/yyyy");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton_home = new javax.swing.JButton();
        jLabel_qlnv = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_NV = new javax.swing.JTable();
        txt_TimKiem = new javax.swing.JTextField();
        btn_TimKiem = new javax.swing.JToggleButton();
        jLabel_thongtin = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_maNV = new javax.swing.JTextField();
        txt_tenNV = new javax.swing.JTextField();
        txt_sdt = new javax.swing.JTextField();
        txt_diaChi = new javax.swing.JTextField();
        jdc_ngaySinh = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btn_Nam = new javax.swing.JRadioButton();
        btn_Nu = new javax.swing.JRadioButton();
        txt_tk = new javax.swing.JTextField();
        txt_mk = new javax.swing.JPasswordField();
        txt_xnmk = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        btn_Them = new javax.swing.JToggleButton();
        btn_Sua = new javax.swing.JToggleButton();
        btn_Xoa = new javax.swing.JToggleButton();
        btn_Luu = new javax.swing.JToggleButton();
        btn_Huy = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/smart-home.png"))); // NOI18N
        jButton_home.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleTrangChu(evt);
            }
        });
        getContentPane().add(jButton_home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 48));

        jLabel_qlnv.setBackground(new java.awt.Color(204, 204, 255));
        jLabel_qlnv.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel_qlnv.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_qlnv.setText("Quản lý nhân viên");
        getContentPane().add(jLabel_qlnv, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 907, 56));

        jTable_NV.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable_NV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable_NV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Giới tính", "Ngày sinh", "SĐT", "Quê quán"
            }
        ));
        jTable_NV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleClickNV(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_NV);
        if (jTable_NV.getColumnModel().getColumnCount() > 0) {
            jTable_NV.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable_NV.getColumnModel().getColumn(1).setResizable(false);
            jTable_NV.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable_NV.getColumnModel().getColumn(2).setPreferredWidth(2);
            jTable_NV.getColumnModel().getColumn(3).setResizable(false);
            jTable_NV.getColumnModel().getColumn(3).setPreferredWidth(28);
            jTable_NV.getColumnModel().getColumn(4).setPreferredWidth(30);
            jTable_NV.getColumnModel().getColumn(5).setPreferredWidth(35);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 141, 630, 420));
        getContentPane().add(txt_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 540, 48));

        btn_TimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/search (1).png"))); // NOI18N
        btn_TimKiem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleTimKiem(evt);
            }
        });
        getContentPane().add(btn_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 578, 60, 50));

        jLabel_thongtin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel_thongtin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_thongtin.setText("Thông tin");
        getContentPane().add(jLabel_thongtin, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 140, 427, 50));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mã nhân viên");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 203, 85, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Họ tên");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 263, 84, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Ngày sinh");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 321, 84, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Số điện thoại");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 379, 84, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Quê quán");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 439, 84, 40));
        getContentPane().add(txt_maNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(733, 205, 188, 40));
        getContentPane().add(txt_tenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 263, 188, 40));
        getContentPane().add(txt_sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 381, 188, 40));
        getContentPane().add(txt_diaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 441, 188, 40));
        getContentPane().add(jdc_ngaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 321, 188, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Giới tính");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 263, 91, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Tài khoản");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 321, 91, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Mật khẩu");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 379, 91, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Xác nhận mật khẩu ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 439, -1, 40));

        buttonGroup1.add(btn_Nam);
        btn_Nam.setText("Nam");
        getContentPane().add(btn_Nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 270, -1, -1));

        buttonGroup1.add(btn_Nu);
        btn_Nu.setText("Nữ");
        getContentPane().add(btn_Nu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 270, -1, -1));
        getContentPane().add(txt_tk, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 320, 150, 40));
        getContentPane().add(txt_mk, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 380, 150, 42));
        getContentPane().add(txt_xnmk, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 440, 150, 42));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Chức năng");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(719, 516, 422, 35));

        btn_Them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/user (1).png"))); // NOI18N
        btn_Them.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleThemNV(evt);
            }
        });
        getContentPane().add(btn_Them, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 569, 75, 50));

        btn_Sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/user(2).png"))); // NOI18N
        btn_Sua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleChinhSuaNV(evt);
            }
        });
        getContentPane().add(btn_Sua, new org.netbeans.lib.awtextra.AbsoluteConstraints(761, 569, 75, 50));

        btn_Xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/user.png"))); // NOI18N
        btn_Xoa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleXoaNV(evt);
            }
        });
        getContentPane().add(btn_Xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(872, 569, 75, 50));

        btn_Luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/floppy-disk (1).png"))); // NOI18N
        btn_Luu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleLuuNV(evt);
            }
        });
        getContentPane().add(btn_Luu, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 569, 75, 50));

        btn_Huy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/x-button.png"))); // NOI18N
        btn_Huy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleHuy(evt);
            }
        });
        getContentPane().add(btn_Huy, new org.netbeans.lib.awtextra.AbsoluteConstraints(1107, 569, 75, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Thêm");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 634, 75, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Chỉnh sửa");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(761, 634, 75, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Xóa");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(872, 634, 75, 20));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Lưu");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 629, 75, 25));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Hủy");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1107, 629, 75, 25));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/nv.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, 590, 520));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/hinh-nen-mau-xanh-8.jpg"))); // NOI18N
        jLabel17.setText("jLabel17");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents
                
    private void handleTimKiem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleTimKiem
        // TODO add your handling code here:
        String sql = "select * from NHANVIEN where MANV like N'%"+txt_TimKiem.getText() + "%' or TENNV like N'%" + txt_TimKiem.getText()+ "%'";
        layDulieu(sql);
        txt_TimKiem.setText("");
    }//GEN-LAST:event_handleTimKiem

    private void handleClickNV(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleClickNV
        dtm = (DefaultTableModel)jTable_NV.getModel();
        int i = jTable_NV.getSelectedRow();
        
        txt_maNV.setText(dtm.getValueAt(i,0).toString());
        txt_tenNV.setText(dtm.getValueAt(i, 1).toString());
        kiemTraGT(dtm.getValueAt(i,2).toString().trim());       
        try {
            Date date = new SimpleDateFormat("dd/MM/yyyy").parse(dtm.getValueAt(i, 3).toString());
            jdc_ngaySinh.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }               
        txt_sdt.setText(dtm.getValueAt(i,4).toString());
        txt_diaChi.setText(dtm.getValueAt(i, 5).toString());
        layTaiKhoan(dtm.getValueAt(i,0).toString());
    }//GEN-LAST:event_handleClickNV

    private void handleLuuNV(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleLuuNV
        String maNV = txt_maNV.getText();
        String tenNV = txt_tenNV.getText();
        String gt = layGioiTinh();        
        String ngaySinh = ((JTextField)jdc_ngaySinh.getDateEditor().getUiComponent()).getText();
        if(ngaySinh.length() > 0){
            try {  
                Date date = new SimpleDateFormat("dd/MM/yyyy").parse(ngaySinh);
                ngaySinh = new SimpleDateFormat("MM/dd/yyyy").format(date);
            } catch (ParseException ex) {
                Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String sdt = txt_sdt.getText();
        String diaChi = txt_diaChi.getText();
        String tk = txt_tk.getText();
        String mk = txt_mk.getText();
        if (add == true){
            try {
                if(kiemTraRong_ThemNV() == true && kiemTraTrung() == false && kiemTraLoi() == true && kiemTraNgaySinh() == true){
                    int click = JOptionPane.showConfirmDialog(null, "Xác nhận Thêm nhân viên này? ", "Xác nhận", 2);
                    if(click == JOptionPane.YES_OPTION){
                        themNV(tenNV, ngaySinh, gt, sdt, diaChi, tk, mk);
                        JOptionPane.showMessageDialog(this, "Thêm thành công nhân viên");
                        layNV();
                    }                    
                    lamMoi();                    
                    tat();
                    btn_Sua.setEnabled(true);
                    btn_Xoa.setEnabled(true);
                }
            } catch (ParseException ex) {
                System.out.println("Error 'luuNV' them: " + ex.getMessage());
                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (change == true){
            try {
                if(kiemTraRong_ChinhSuaNV()== true && kiemTraLoi() == true && kiemTraNgaySinh() == true){
                    if(kiemTraTonTai(maNV) == true){
                        int click = JOptionPane.showConfirmDialog(null, "Xác nhận Chỉnh sửa nhân viên này? ", "Xác nhận", 2);
                        if(click == JOptionPane.YES_OPTION){
                            if(chinhSuaNV(maNV,tenNV, ngaySinh, gt, sdt, diaChi, mk) == true){
                                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                                layNV();
                            }                            
                        }                         
                        lamMoi();                        
                        tat();
                        btn_Sua.setEnabled(true);
                        btn_Xoa.setEnabled(true);
                    }else JOptionPane.showMessageDialog(this, "Cập nhật không thành công!\nKhông tìm thấy Mã nhân viên " +txt_maNV.getText()+ "để cập nhật!");                    
                }                                
            } catch (ParseException ex) {
                System.out.println("Error 'luuNV' chinhsua: " + ex.getMessage());
            }
        }               
    }//GEN-LAST:event_handleLuuNV
           
    private void handleXoaNV(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleXoaNV
        String maNV = txt_maNV.getText();
        if(maNV.equals("")){
            JOptionPane.showMessageDialog(this, "Hãy chọn nhân viên bạn muốn xóa");            
        }else{
            if(kiemTraTonTai(maNV) == false){          
                JOptionPane.showMessageDialog(this, "Mã nhân viên không nằm trong danh sách");    
            }else{
                int click = JOptionPane.showConfirmDialog(null, "Xác nhận xóa nhân viên này? ", "Xác nhận", 2);
                if(click == JOptionPane.YES_OPTION){
                    xoaNV(maNV);
                    JOptionPane.showMessageDialog(this, "Xóa thành công nhân viên");
                    layNV();
                }
                lamMoi();
                startFunctionalButtons();
            }
        }
    }//GEN-LAST:event_handleXoaNV

    private void handleChinhSuaNV(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleChinhSuaNV
        bat();
        change = true;
        add = false;                        
        btn_Them.setEnabled(false);
        btn_Xoa.setEnabled(false);        
        txt_maNV.setEnabled(false);
        txt_tk.setEnabled(false);
        
        txt_mk.setText("");
        txt_xnmk.setText("");
    }//GEN-LAST:event_handleChinhSuaNV

    private void handleThemNV(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleThemNV
        // TODO add your handling code here:
        lamMoi();                
        bat();
        add = true;
        change = false;
        btn_Sua.setEnabled(false);
        btn_Xoa.setEnabled(false);
        txt_maNV.setEnabled(false);   
        Connection cn = ConnectDB.SQLConnect();
        String sql = "SELECT dbo.FN_GETMANV_NEXT() AS MANV_NEXT";
        try{
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) txt_maNV.setText(rs.getString("MANV_NEXT"));
        }catch(SQLException ex){
            System.out.println("Loi load Manv_next: " + ex.getMessage());            
        }
    }//GEN-LAST:event_handleThemNV

    private void handleHuy(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleHuy
        // TODO add your handling code here:
        lamMoi();                
        tat();
        startFunctionalButtons();
        if(add == true) add = false;
        if(change == true) change = false;
    }//GEN-LAST:event_handleHuy

    private void handleTrangChu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleTrangChu
        GiaoDienChung gdc = new GiaoDienChung(this.staff);
        this.setVisible(false);
        gdc.setVisible(true);
    }//GEN-LAST:event_handleTrangChu
    
    private void bat(){
        txt_maNV.setEnabled(true);
        txt_tenNV.setEnabled(true);
        jdc_ngaySinh.setEnabled(true);
        txt_sdt.setEnabled(true);
        txt_tk.setEnabled(true);
        txt_mk.setEnabled(true);
        txt_xnmk.setEnabled(true);
        txt_diaChi.setEnabled(true);
        btn_Nam.setEnabled(true);
        btn_Nu.setEnabled(true);
    }
    
    private void tat(){
        txt_maNV.setEnabled(false);
        txt_tenNV.setEnabled(false);
        jdc_ngaySinh.setEnabled(false);
        txt_sdt.setEnabled(false);
        txt_tk.setEnabled(false);
        txt_mk.setEnabled(false);
        txt_xnmk.setEnabled(false);
        txt_diaChi.setEnabled(false);
        btn_Nam.setEnabled(false);
        btn_Nu.setEnabled(false);
    }
    
    private void lamMoi(){        
        txt_maNV.setText("");
        txt_tenNV.setText("");
        jdc_ngaySinh.setCalendar(null);
        txt_sdt.setText("");
        txt_tk.setText("");
        txt_mk.setText("");
        txt_xnmk.setText("");
        txt_diaChi.setText("");        
        btn_Nam.setSelected(false);
        btn_Nu.setSelected(false);
    }
    
    private void startFunctionalButtons(){
        btn_Them.setEnabled(true);
        btn_Sua.setEnabled(true);
        btn_Xoa.setEnabled(true);
        btn_Luu.setEnabled(true);
        btn_Huy.setEnabled(true);
        btn_Nam.setEnabled(false);
        btn_Nu.setEnabled(false);
    }
    
    private String layGioiTinh(){
        if(btn_Nam.isSelected())
            return btn_Nam.getText();
        else
            return btn_Nu.getText();
    }
    
    private void layDulieu(String sql){
        dtm = (DefaultTableModel)jTable_NV.getModel();
        dtm.setNumRows(0);        
        Date date;
        Vector vt;
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                vt = new Vector();
                vt.add(rs.getString("MANV"));
                vt.add(rs.getString("TENNV"));
                vt.add(rs.getString("GIOITINH"));
                date = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("NGAYSINH"));
                vt.add(new SimpleDateFormat("dd/MM/yyyy").format(date));
                vt.add(rs.getString("SDT"));
                vt.add(rs.getString("DIACHI"));
                dtm.addRow(vt);
            }
            jTable_NV.setModel(dtm);
            rs.close();
            ps.close();
            cn.close();
        }
        catch(SQLException | ParseException ex){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                
    
    private void layTaiKhoan(String s){   
        Connection cn = ConnectDB.SQLConnect();
        String sql = "select TAIKHOAN from NHANVIEN where MANV = N'" +s+ "'";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                txt_tk.setText(rs.getString("TAIKHOAN").trim());
//                txt_mk.setText(rs.getString("MATKHAU").trim());
//                txt_xnmk.setText(rs.getString("MATKHAU").trim());
            }
            ps.close();
            rs.close();
            cn.close();
        } catch (SQLException e) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }        
    
    private void kiemTraGT(String GT){        
        if(GT.equals("Nam"))
            btn_Nam.setSelected(true);
        else
            btn_Nu.setSelected(true);
    }
    
    private boolean kiemTraRong_ThemNV(){        
        if(txt_maNV.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã nhân viên");
            return false;
        }else{
            if(txt_tenNV.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên nhân viên");
                return false;
            }else{
                if(btn_Nam.isSelected()==false && btn_Nu.isSelected()==false){
                    JOptionPane.showMessageDialog(this, "Bạn chưa chọn giới tính");
                    return false;
                }else{
                    if(((JTextField)jdc_ngaySinh.getDateEditor().getUiComponent()).getText().equals("")){
                        JOptionPane.showMessageDialog(this, "Bạn chưa nhập ngày sinh");
                        return false;
                    }else{
                        if(txt_sdt.getText().equals("")){
                            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại");
                            return false;
                        }else{
                            if(txt_diaChi.getText().equals("")){
                                JOptionPane.showMessageDialog(this, "Bạn chưa nhập địa chỉ");
                                return false;
                            }else{
                                if(txt_tk.getText().equals("")){
                                    JOptionPane.showMessageDialog(this, "Bạn chưa nhập tài khoản");
                                    return false;
                                }else if(txt_tk.getText().length() < 5){
                                    JOptionPane.showMessageDialog(this, "Tài khoản từ 5 ký tự trở lên");
                                    return false;
                                }else{
                                    if(txt_mk.getText().equals("")){
                                        JOptionPane.showMessageDialog(this, "Bạn chưa nhập mật khẩu");
                                        return false;
                                    }else if(txt_mk.getText().length() < 4){
                                        JOptionPane.showMessageDialog(this, "Mật khẩu từ 4 ký tự trở lên");
                                        return false;
                                    }
                                    else{
                                        if(txt_xnmk.getText().equals("")){
                                            JOptionPane.showMessageDialog(this, "Bạn chưa nhập xác nhận mật khẩu");
                                            return false;
                                        }else if(!String.valueOf(txt_mk.getPassword()).equals(String.valueOf(txt_xnmk.getPassword()))){
                                            JOptionPane.showMessageDialog(this, "Mật khẩu xác nhận không trùng khớp");
                                            return false;
                                        }else{
                                            return true;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } 
    }
    
    private boolean kiemTraRong_ChinhSuaNV(){        
        if(txt_maNV.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã nhân viên");
            return false;
        }else{
            if(txt_tenNV.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên nhân viên");
                return false;
            }else{
                if(btn_Nam.isSelected()==false && btn_Nu.isSelected()==false){
                    JOptionPane.showMessageDialog(this, "Bạn chưa chọn giới tính");
                    return false;
                }else{
                    if(((JTextField)jdc_ngaySinh.getDateEditor().getUiComponent()).getText().equals("")){
                        JOptionPane.showMessageDialog(this, "Bạn chưa nhập ngày sinh");
                        return false;
                    }else{
                        if(txt_sdt.getText().equals("")){
                            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại");
                            return false;
                        }else{
                            if(txt_diaChi.getText().equals("")){
                                JOptionPane.showMessageDialog(this, "Bạn chưa nhập địa chỉ");
                                return false;
                            }else{
                                if(txt_tk.getText().equals("")){
                                    JOptionPane.showMessageDialog(this, "Bạn chưa nhập tài khoản");
                                    return false;
                                }else if(txt_tk.getText().length() < 5){
                                    JOptionPane.showMessageDialog(this, "Tài khoản từ 5 ký tự trở lên");
                                    return false;
                                }else{
                                    if((!txt_mk.getText().equals("") || !txt_xnmk.getText().equals("")) && !txt_mk.getText().equals(txt_xnmk.getText())){
                                        JOptionPane.showMessageDialog(this, "Mật khẩu mới và Xác nhận mật khẩu mới không trùng khớp!!!\nHoặc để trống để giữ lại mật khẩu cũ.");
                                        return false;
                                    }
                                    if(txt_mk.getText().equals("") && txt_xnmk.getText().equals("")){
                                        return true;
                                    }
                                    return !txt_mk.getText().equals("") && txt_mk.getText().equals(txt_xnmk.getText());
                                }
                            }
                        }
                    }
                }
            }
        } 
    }
    
    private boolean kiemTraNgaySinh() throws ParseException{
        String ngay = ((JTextField)jdc_ngaySinh.getDateEditor().getUiComponent()).getText();        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date currentDate = new Date();
        Date date = sdf.parse(sdf.format(currentDate));
        Date date1 = sdf.parse(ngay);
        long so = 568080000000L; //System.out.println("\ndate: " +date+ "\ndate1: " +date1 +"\ngettime date: " + date.getTime() + "\ngettime date1: " + date1.getTime());
        if(date.getTime() - date1.getTime() >=  so){
            return true;
        }
        JOptionPane.showMessageDialog(this, "Không cho phép nhân viên dưới 18 tuổi");
        return false;
    }
    
    private boolean kiemTraLoi(){
        // kiểm tra số điện thoại
        String pattern = "0[0-9]{9}";   
        String pattern1 = "\\w+";        
        String pattern2 = "[a-zA-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúă"
                + "đĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤ"
                + "ỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ ]+";               
        
        //kiểm tra có ký tự đặc biệt
        if( txt_maNV.getText().trim().matches(pattern1) == false){
            JOptionPane.showMessageDialog(this, "Mã nhân viên không được chứa ký tự đặt biệt");
            return false;
        }        
        if(txt_sdt.getText().matches(pattern) == false){
                JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ (chỉ nhập số, tối đa 10 số )");
                return false;
        }
        
        // kiểm tra nhập có số
        if(txt_tenNV.getText().matches(pattern2) == false){
            JOptionPane.showMessageDialog(this, "Tên không được chứa số và ký tự đặt biệt");
            return false;
        }
        if(txt_tk.getText().matches(pattern1) == false){
            JOptionPane.showMessageDialog(this, "Tài khoản không được ký tự đặt biệt");
            return false;
        }
        
        return true;
    }        
    
    private boolean kiemTraTrung(){                     //THEM NV
        Connection cn = ConnectDB.SQLConnect();
        String sql = "select * from NHANVIEN";
        try {
                PreparedStatement ps = cn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    if(rs.getString("MANV").trim().equals(txt_maNV.getText().trim())){
                        JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại ");
                        return true;
                    }
                    else if(rs.getString("TAIKHOAN").trim().equals(txt_tk.getText().trim())){
                        JOptionPane.showMessageDialog(this, "Tài khoản đã tồn tại");
                        return true;
                    }
                }
                cn.close();
                ps.close();
                rs.close();
        }
        catch (HeadlessException | SQLException ex) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    private boolean kiemTraTonTai(String maNV){         //CHINH SUA NV        
        boolean tonTai = false;
        String sql = "select * from NHANVIEN where MANV = N'" + maNV +"'";
        try {
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                tonTai = true;
            }
            rs.close();
            ps.close();
            cn.close();
        } catch (SQLException e) {
             Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return tonTai;
    }        
    
    private void themNV(String ten, String ngaySinh, String gt, String sdt , String diaChi, String tk , String mk){
        String sql = "EXEC SP_THEMNV N'" +ten+ "','" +ngaySinh+ "',N'" +gt+ "','" +sdt+ "',N'" +diaChi+ "','" +tk+ "','" +mk+ "',2"; 
        Connection cn = ConnectDB.SQLConnect();
        ConnectDB.queryUpdate(sql);
    }
    
    private boolean chinhSuaNV(String maNV, String ten, String ngaySinh, String gt,  String sdt, String diaChi, String mk){               
        boolean edited = false;            
        String sql;
        
        if(txt_mk.getText().equals("") && txt_xnmk.getText().equals("")){
            sql = "UPDATE NHANVIEN SET TENNV=N'"+ten+"', NGAYSINH='"+ngaySinh+"', GIOITINH=N'"+gt+"', SDT='"+sdt+"',DIACHI=N'"+diaChi+"' WHERE MANV=N'"+maNV+"'";
            try {
                Connection cn = ConnectDB.SQLConnect();
                PreparedStatement ps = cn.prepareStatement(sql);
                ps.executeUpdate();
                edited = true;
                ps.close();
                cn.close();                        
            } catch (SQLException ex) {
                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(!txt_mk.getText().equals("") && txt_xnmk.getText().equals(txt_mk.getText())){
            sql = "UPDATE NHANVIEN SET TENNV=N'"+ten+"', NGAYSINH='"+ngaySinh+"', GIOITINH=N'"+gt+"', SDT='"+sdt+"',DIACHI=N'"+diaChi+"',MATKHAU=HASHBYTES('MD5','"+mk+"') WHERE MANV=N'"+maNV+"'";
            try {
                Connection cn = ConnectDB.SQLConnect();
                PreparedStatement ps = cn.prepareStatement(sql);
                ps.executeUpdate();
                edited = true;
                ps.close();
                cn.close();                        
            } catch (SQLException ex) {
                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
        return edited;
    }
    
    private void xoaNV(String maNV){        
        String sql = "delete from NHANVIEN where MANV = N'" +maNV+ "'";
        Connection cn = ConnectDB.SQLConnect();
        ConnectDB.queryUpdate(sql);
    }
    
    private void layNV(){
        String sql = "select * from NHANVIEN";
        layDulieu(sql);
    }        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NguoiDung staff = new NguoiDung();                
                staff.setManv("NV01");
                staff.setHoten("admin");
                staff.setTendn("admin");
                staff.setMacv(1);
                new NhanVien(staff).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_Huy;
    private javax.swing.JToggleButton btn_Luu;
    private javax.swing.JRadioButton btn_Nam;
    private javax.swing.JRadioButton btn_Nu;
    private javax.swing.JToggleButton btn_Sua;
    private javax.swing.JToggleButton btn_Them;
    private javax.swing.JToggleButton btn_TimKiem;
    private javax.swing.JToggleButton btn_Xoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton_home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_qlnv;
    private javax.swing.JLabel jLabel_thongtin;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_NV;
    private com.toedter.calendar.JDateChooser jdc_ngaySinh;
    private javax.swing.JTextField txt_TimKiem;
    private javax.swing.JTextField txt_diaChi;
    private javax.swing.JTextField txt_maNV;
    private javax.swing.JPasswordField txt_mk;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_tenNV;
    private javax.swing.JTextField txt_tk;
    private javax.swing.JPasswordField txt_xnmk;
    // End of variables declaration//GEN-END:variables
}
