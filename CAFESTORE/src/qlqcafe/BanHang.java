/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlqcafe;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nhom 40
 */
public class BanHang extends javax.swing.JFrame implements Runnable,ActionListener{
    private final NguoiDung staff;
    private static String idDatBan;
    private Thread thread;        
    private final DefaultListModel mod;
    
    private static DefaultTableModel dtm;
    private int countKey = -1;
    
    public BanHang(NguoiDung user, String idDat){             //=================== CHƯA LÀM CHỨC NĂNG NHẬP SỐ TIỀN NHẬN =============
        initComponents();
        this.staff = user;
        if(idDat == null || idDat.equals("")) idDatBan = "";
        else idDatBan = idDat;          System.out.println(idDatBan);
        lbl_TenNV.setText(staff.getHoten());
        setResizable(false);
        setLocationRelativeTo(this);
        menu.add(panel_TextSuggest);
        mod = new DefaultListModel();
        suggestList.setModel(mod);
        setInfoDatBan();
        loadLoaiSP();
        threadStart();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_TextSuggest = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        suggestList = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        btn_TroVe = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tfNote = new javax.swing.JTextField();
        txt_TenKH = new javax.swing.JTextField();
        txt_sdt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbx_loaiDU = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbx_tenDU = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txt_slDU = new javax.swing.JTextField();
        btn_Them = new javax.swing.JToggleButton();
        btn_Xoa = new javax.swing.JToggleButton();
        btn_ThanhToan = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DoUong = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        lbl_TongTien = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_TienNhan = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        lbl_TienThua = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_TimKiem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_slb = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        lbl_slBanTrong = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbl_TenNV = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        suggestList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        suggestList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleGetSuggestedTextMouseClicked(evt);
            }
        });
        suggestList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                handleGetSuggestedTextKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(suggestList);

        javax.swing.GroupLayout panel_TextSuggestLayout = new javax.swing.GroupLayout(panel_TextSuggest);
        panel_TextSuggest.setLayout(panel_TextSuggestLayout);
        panel_TextSuggestLayout.setHorizontalGroup(
            panel_TextSuggestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
        );
        panel_TextSuggestLayout.setVerticalGroup(
            panel_TextSuggestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        menu.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Edwardian Script ITC", 2, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quán Cafe");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 320, -1));

        btn_TroVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/smart-home (1).png"))); // NOI18N
        btn_TroVe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_TroVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleTrangChu(evt);
            }
        });
        getContentPane().add(btn_TroVe, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 70));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("THÔNG TIN ĐẶT BÀN TRƯỚC");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("KHÁCH HÀNG:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 120, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("SĐT:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 100, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ghi chú", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tfNote.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfNote, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tfNote)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 280, 90));

        txt_TenKH.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txt_TenKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 150, 30));

        txt_sdt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txt_sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 150, 30));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/reset_60.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleResetInfoDatBan(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 40, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Reset");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/datban.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-280, 40, 730, 440));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 450, 480));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Loại đồ uống");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 80, 30));

        jPanel5.add(cbx_loaiDU, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 170, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tên đồ uống");
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 80, 30));

        cbx_tenDU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleLoadSPTheoLoai(evt);
            }
        });
        jPanel5.add(cbx_tenDU, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, 170, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("SL đồ uống");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 80, 30));
        jPanel5.add(txt_slDU, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 90, 30));

        btn_Them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/plus.png"))); // NOI18N
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleThemSP(evt);
            }
        });
        jPanel5.add(btn_Them, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 75, 80));

        btn_Xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/delete.png"))); // NOI18N
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleXoaSP(evt);
            }
        });
        jPanel5.add(btn_Xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, 74, 80));

        btn_ThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/pay (1).png"))); // NOI18N
        btn_ThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleThanhToan(evt);
            }
        });
        jPanel5.add(btn_ThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 76, 80));

        jTable_DoUong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên nước", "Số Lượng", "Thành tiền"
            }
        ));
        jTable_DoUong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                handleClickTableChonMon(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_DoUong);
        if (jTable_DoUong.getColumnModel().getColumnCount() > 0) {
            jTable_DoUong.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTable_DoUong.getColumnModel().getColumn(2).setMinWidth(30);
        }

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 470, 193));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tổng tiền");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 70, 35));

        lbl_TongTien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_TongTien.setText("0");
        jPanel5.add(lbl_TongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, 130, 35));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Tiền nhận");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, -1, 30));

        txt_TienNhan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_TienNhan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                handleNhapTienNhan(evt);
            }
        });
        jPanel5.add(txt_TienNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 370, 110, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Tiền thừa");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 420, -1, 30));

        lbl_TienThua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_TienThua.setText("0");
        jPanel5.add(lbl_TienThua, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, 110, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("CHỌN SẢN PHẨM");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        jLabel12.setText("Tìm theo Tên sản phẩm");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, -1, 30));

        txt_TimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                handleTimKiem(evt);
            }
        });
        jPanel5.add(txt_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, 200, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/reset_60.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleResetChonMon(evt);
            }
        });
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 40, 40));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Reset");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("SL bàn");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 80, 30));
        jPanel5.add(txt_slb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 80, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("SL BÀN TRỐNG HIỆN TẠI:");
        jPanel5.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 160, 20));
        jPanel5.add(lbl_slBanTrong, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 50, 40, 20));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/nv.png"))); // NOI18N
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 790, 440));

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 830, -1));

        lbl_TenNV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_TenNV.setForeground(new java.awt.Color(255, 255, 255));
        lbl_TenNV.setText("TÊN NHÂN VIÊN");
        getContentPane().add(lbl_TenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 140, 30));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/hinh-nen-mau-xanh-8.jpg"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
             
    private void threadStart(){
        if(thread == null){
            thread = new Thread(this);
            thread.start();
        }
    }
    
    private void handleTrangChu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleTrangChu
        if(staff.getMacv() == 1){
            GiaoDienChung gdc = new GiaoDienChung(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }
        if(staff.getMacv() == 2){
            GiaoDienNhanVien gdc = new GiaoDienNhanVien(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }        
    }//GEN-LAST:event_handleTrangChu

    private void handleTimKiem(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_handleTimKiem
        // TODO add your handling code here:
        String search = txt_TimKiem.getText();        
        if(!search.equals("")){
            mod.removeAllElements();
            panel_TextSuggest.setVisible(true);
            menu.setVisible(true);            
            Set<String> set = getDSTenSP();
            set.forEach((item) -> {
                mod.addElement(item);
            });
            menu.show(txt_TimKiem, 0, 30);
        }    
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txt_TimKiem.setText(mod.getElementAt(countKey).toString());
            panel_TextSuggest.setVisible(false);
            menu.setVisible(false);
            addDataTimKiemVaoComboboxes(txt_TimKiem.getText().trim()); //tim kiem tenSP
        }
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            if(countKey < mod.getSize() - 1){
                countKey++;
                suggestList.setSelectedIndex(countKey);
                txt_TimKiem.setText(mod.getElementAt(countKey).toString());
            }                
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            if(countKey > 0){
                countKey--;
                suggestList.setSelectedIndex(countKey);
                txt_TimKiem.setText(suggestList.getSelectedValue());
            }
        }
    }//GEN-LAST:event_handleTimKiem

    private void handleGetSuggestedTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_handleGetSuggestedTextKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String str = suggestList.getSelectedValue();
            if(str.length() > 0){
                txt_TimKiem.setText(str);
                panel_TextSuggest.setVisible(false);
                menu.setVisible(false);
                addDataTimKiemVaoComboboxes(txt_TimKiem.getText().trim()); //tim kiem tenSP
            }
        }
    }//GEN-LAST:event_handleGetSuggestedTextKeyPressed

    private void handleLoadSPTheoLoai(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleLoadSPTheoLoai
        // TODO add your handling code here:
        String loaiSP = cbx_loaiDU.getSelectedItem().toString().trim();
        if(!loaiSP.equals("")) loadTenSPTheoLoai(loaiSP);
        else JOptionPane.showMessageDialog(this, "Vui lòng chọn loại đồ uống!");
    }//GEN-LAST:event_handleLoadSPTheoLoai

    private void handleThemSP(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleThemSP
        // TODO add your handling code here:                        
        //Tim kiem sanpham xong nhan enter gui data qua cbx, xong nhap slSP, roi moi duoc them        
        String slStr = txt_slDU.getText().trim();        
        boolean existed = false;
        
        if(kiemTraRong() == true && kiemTraNhapSo(slStr) == true){
            String tenDU = cbx_tenDU.getSelectedItem().toString().trim();
            int slDU = Integer.parseInt(slStr);
            
            if(slDU > 0){
                for(int i=0; i<jTable_DoUong.getRowCount(); i++){
                    if(dtm.getValueAt(i, 1).toString().equals(tenDU)){          //neu SP da co trong table thi se ghi de                
                        dtm.setValueAt(slStr, i, 2);
                        dtm.setValueAt(slDU*(getDonGiaSP(tenDU)*(100 - getGiamGiaSP(tenDU))/100), i, 3);
                        existed = true;
                    }
                }
                if(existed == false){
                    dtm = (DefaultTableModel)jTable_DoUong.getModel();
                    Object[] row = new Object[4];
                    row[0] = jTable_DoUong.getRowCount() + 1;
                    row[1] = tenDU;
                    row[2] = slStr;
                    row[3] = Integer.parseInt(slStr)*(getDonGiaSP(row[1].toString())*(100 - getGiamGiaSP(row[1].toString()))/100);
                    dtm.addRow(row);
                }
            }else JOptionPane.showMessageDialog(this, "Số lượng đồ uống KHÔNG ĐƯỢC NHỎ HƠN HOẶC BẰNG 0!");            
        }        
        
        //cap nhat Tong Tien
        hienthiTongTien();
        hienthiTienThua();
    }//GEN-LAST:event_handleThemSP

    private void handleGetSuggestedTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleGetSuggestedTextMouseClicked
        // TODO add your handling code here:
        String str = suggestList.getSelectedValue();
        if(str.length() > 0){
            txt_TimKiem.setText(str);
            panel_TextSuggest.setVisible(false);
            menu.setVisible(false);
            addDataTimKiemVaoComboboxes(txt_TimKiem.getText().trim()); //tim kiem tenSP
        }
    }//GEN-LAST:event_handleGetSuggestedTextMouseClicked

    private void handleNhapTienNhan(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_handleNhapTienNhan
        // TODO add your handling code here:
        String tong = lbl_TongTien.getText().trim();
        tong = tong.substring(0, tong.length() - 4);
        int tongTien = Integer.parseInt(new XuLyChung().unformatCurrency(tong));
        char numChar  = evt.getKeyChar();
        if(numChar >= '0' && numChar <= '9' || numChar == KeyEvent.VK_BACK_SPACE){
            String tienNhan = txt_TienNhan.getText().trim();
            if(tienNhan.equals("")) tienNhan = "0";   
            
            int tienThua = Integer.parseInt(tienNhan) - tongTien;
            String tienThuaFmt = new XuLyChung().formatCurrency(String.valueOf(tienThua));
            lbl_TienThua.setText(tienThuaFmt + " VNĐ");           
        }else{
            String str = txt_TienNhan.getText().trim();
            txt_TienNhan.setText(str.substring(0, str.length() -1));
        }
    }//GEN-LAST:event_handleNhapTienNhan

    private void handleXoaSP(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleXoaSP
        // TODO add your handling code here:
        int i = jTable_DoUong.getSelectedRow();
        if(i >= 0){
            dtm.removeRow(i);
            resetSTTTable();
            hienthiTongTien();
            hienthiTienThua();
        }else JOptionPane.showMessageDialog(this, "Vui lòng chọn đồ uống cần xóa!");    
    }//GEN-LAST:event_handleXoaSP

    private void handleThanhToan(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleThanhToan
        // TODO add your handling code here:
        if(jTable_DoUong.getRowCount() > 0){
            if(txt_TienNhan.getText().trim().equals("")) JOptionPane.showMessageDialog(this, "Vui lòng nhập Số tiền nhận từ khách!"); 
            else{
                String slb = txt_slb.getText().trim();
                if(slb.equals("")) JOptionPane.showMessageDialog(this, "Vui lòng nhập Số lượng bàn trước khi thanh toán!"); 
                else if(kiemTraNhapSo(slb) == false) JOptionPane.showMessageDialog(this, "Số lượng bàn chỉ cho phép nhập số!"); 
                else if(!slb.equals("") && kiemTraNhapSo(slb) == true){                    
                    String tienthuaStr = lbl_TienThua.getText().trim();
                    tienthuaStr = tienthuaStr.substring(0, tienthuaStr.length() - 4);
                    if(tienthuaStr.charAt(0) == '-') JOptionPane.showMessageDialog(this, "Số tiền nhận từ khách không đủ để thanh toán!"); 
                    else{
                        String maHDNext = getMaHDNext();
                        String maSP = "", sl = "", thanhtien = "";
                        for(int i=0; i<jTable_DoUong.getRowCount(); i++){
                            maSP = getMaSP(dtm.getValueAt(i, 1).toString().trim());
                            sl = dtm.getValueAt(i, 2).toString().trim();
                            thanhtien = dtm.getValueAt(i, 3).toString().trim();
                            luuHD(maHDNext, maSP, sl, thanhtien);
                        }
                        String tongTien = String.valueOf(tinhTongTien());
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                        Date date = new Date();                        
                        luuCTHD(maHDNext, staff.getManv(), tongTien, sdf.format(date));
                        if(!txt_TenKH.getText().trim().equals("")) capNhatDatBan(idDatBan);
                        JOptionPane.showMessageDialog(this, "Lưu hóa đơn thành công!"); 
                        resetTextChonMon();
                        new XuLyChung().setSLBanTrongHienTaiGiam(slb);
                    }
                }                
            }            
        }                        
    }//GEN-LAST:event_handleThanhToan

    private void handleClickTableChonMon(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_handleClickTableChonMon
        // TODO add your handling code here:
        if(jTable_DoUong.getRowCount() > 0){
            int i = jTable_DoUong.getSelectedRow();
            if(i >= 0){
                dtm = (DefaultTableModel) jTable_DoUong.getModel();
                String tenSP = dtm.getValueAt(i, 1).toString().trim();
                addDataTimKiemVaoComboboxes(tenSP);
                txt_slDU.setText(dtm.getValueAt(i, 2).toString().trim());
            }            
        }
    }//GEN-LAST:event_handleClickTableChonMon

    private void handleResetChonMon(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleResetChonMon
        // TODO add your handling code here:
        resetTextChonMon();
    }//GEN-LAST:event_handleResetChonMon

    private void handleResetInfoDatBan(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleResetInfoDatBan
        // TODO add your handling code here:
        resetTextDatBan();
    }//GEN-LAST:event_handleResetInfoDatBan
           
    
    
    
    
    
    
    private void resetTextDatBan(){
        txt_TenKH.setText("");
        txt_sdt.setText("");
        tfNote.setText("");
    }
    
    private void resetTextChonMon(){
        txt_TimKiem.setText("");
        jTable_DoUong.removeAll();
        txt_TienNhan.setText("");
        lbl_TienThua.setText("");
        lbl_TongTien.setText("");
        txt_slDU.setText(""); 
        txt_slb.setText("");
        loadLoaiSP();
        cbx_loaiDU.setSelectedIndex(0);
        loadTenSPTheoLoai(cbx_loaiDU.getSelectedItem().toString().trim());
        if(cbx_tenDU.getItemCount() > 0) cbx_tenDU.setSelectedIndex(0);
        jTable_DoUong.setModel(new DefaultTableModel(null, new String[]{"STT","Tên nước","Số lượng","Thành Tiền"}));
        dtm = (DefaultTableModel)jTable_DoUong.getModel();
    }
    
    private void resetSTTTable(){
        for(int i=0; i<jTable_DoUong.getRowCount(); i++){
            dtm.setValueAt(i+1, i, 0);
        }
    }
    
    private void enableTextDatBan(boolean enable){
        txt_TenKH.setEnabled(enable);
        txt_sdt.setEnabled(enable);
        tfNote.setEnabled(enable);
    }
    
//    private void enableTextChonMon(){
//        
//    }
    
    private void setInfoDatBan(){
        enableTextDatBan(false);
        if(!idDatBan.equals("")){
            String sql = "SELECT * FROM DATBAN WHERE IDDATBAN = '" + idDatBan + "'";
            try{
                Connection cn = ConnectDB.SQLConnect();
                PreparedStatement ps = cn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                if(rs.next()){
                    txt_TenKH.setText(rs.getString("HOTENKH"));
                    txt_sdt.setText(rs.getString("SDT"));
                    txt_slb.setText(rs.getString("SOLUONGBAN"));
                    tfNote.setText(rs.getString("GHICHU"));
                }
                ps.close();
                cn.close();
            } catch(SQLException e){
                Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }
    
    private void loadLoaiSP(){
        cbx_loaiDU.removeAllItems();
        String sql = "SELECT DISTINCT TENLSP FROM LOAISP";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                cbx_loaiDU.addItem(rs.getString("TENLSP"));
            }
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void loadTenSPTheoLoai(String loaiSP){
        cbx_tenDU.removeAllItems();
        String sql = "SELECT DISTINCT LSP.TENLSP, SP.TENSP " +
                    "FROM LOAISP AS LSP, SANPHAM AS SP " +
                    "WHERE SP.MALSP = LSP.MALSP AND LSP.TENLSP = N'" + loaiSP + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                cbx_tenDU.addItem(rs.getString("TENSP"));
            }
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private Set<String> getDSTenSP(){
        Set<String> set = new TreeSet<>();
        String sql = "SELECT DISTINCT TENSP FROM SANPHAM";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                set.add(rs.getString("TENSP"));
            }
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }        
        return set;
    }
    
    private boolean kiemtraTenSPTonTai(String tenSP){
        String sql = "SELECT * FROM SANPHAM WHERE TENSP = N'" + tenSP + "'";
        boolean tontai = ConnectDB.selectSQLReturnTrueFalse(sql);
        if(tontai == false) JOptionPane.showMessageDialog(this, "Sản phẩm " + tenSP + " không tồn tại...\nVui lòng chọn sản phẩm khác!");
        return tontai;
    }
    
    private int getDonGiaSP(String tenSP){
        int dongia = 0;
        String sql = "SELECT DONGIA FROM SANPHAM WHERE TENSP = N'" + tenSP + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) dongia = rs.getInt("DONGIA");
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return dongia;
    }      
    
    private int getGiamGiaSP(String tenSP){
        int sale = 0;
        String sql = "SELECT GIAMGIA FROM SANPHAM WHERE TENSP = N'" + tenSP + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()) sale = rs.getInt("GIAMGIA");
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return sale;
    }  
    
    private void addDataTimKiemVaoComboboxes(String tenSP){        
        String sql = "SELECT LSP.TENLSP " +
                    "FROM LOAISP AS LSP, SANPHAM AS SP " +
                    "WHERE SP.MALSP = LSP.MALSP AND SP.TENSP = N'" + tenSP + "'";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                cbx_loaiDU.setSelectedItem(rs.getString("TENLSP"));
                loadTenSPTheoLoai(cbx_loaiDU.getSelectedItem().toString().trim());
                cbx_tenDU.setSelectedItem(tenSP);
                txt_slDU.setText("");
            }else JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm có tên " + tenSP + "!");
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private String getMaHDNext(){
        String sql = "DECLARE @return nvarchar(20) " +
                    "EXEC @return = [dbo].[FN_GETMAHD_NEXT] " +
                    "SELECT 'RETURN' = @return";
        String maHDNext = "";
        try{
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                maHDNext = rs.getString("RETURN");
            }else JOptionPane.showMessageDialog(this, "Không thể tạo hóa đơn!");
            ps.close();
            cn.close();
        } catch(SQLException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
        return maHDNext;
    }
    
    private String getMaSP(String tenSP){
        String maSP = "";
        maSP = ConnectDB.selectSQLReturnOneValue("MASP", "SANPHAM", "TENSP = N'" + tenSP + "'", "getMaSP", "BanHang");
        return maSP;
    }
    
    private void luuHD(String maHD, String maSP, String soLuong, String thanhTien){
        String sql = "INSERT INTO HOADON VALUES(N'" + maHD + "','" + maSP + "','" + soLuong + "','" + thanhTien + "')";
        ConnectDB.queryUpdate(sql);
    }
    
    private void luuCTHD(String maHD, String maNV, String tongTien, String ngayMua){
        String sql = "EXEC SP_INS_CTHD N'" + maHD + "',N'" + maNV + "','" + tongTien + "','" + ngayMua + "'";
        ConnectDB.queryUpdate(sql);
    }
    
    private void capNhatDatBan(String idDat){
        String sql = "UPDATE DATBAN SET TRANGTHAIDEN = 1 WHERE IDDATBAN = '" + idDat + "'";
        ConnectDB.queryUpdate(sql);
    }
    
//    public void setSLBanTrongTang(String slBan){
//        String sql = "UPDATE BAN SET TRANGTHAIRONG = 1 WHERE MABAN IN " +
//                    "(SELECT TOP(ISNULL(" + slBan + ",0)) MABAN FROM BAN " +
//                    "WHERE TRANGTHAIRONG = 0 ORDER BY NEWID())";
//        ConnectDB.queryUpdate(sql);
//    }
//    
//    public void setSLBanTrongGiam(String slBan){
//        String sql = "UPDATE BAN SET TRANGTHAIRONG = 0 WHERE MABAN IN " +
//                    "(SELECT TOP (ISNULL(" + slBan + ",0)) MABAN FROM BAN " +
//                    "WHERE TRANGTHAIRONG = 1 ORDER BY NEWID())";
//        ConnectDB.queryUpdate(sql);
//    }
    
    
    
    
    //=======
    
    private int tinhTongTien(){
        int tongTien = 0;
        if(jTable_DoUong.getRowCount() > 0){
            for(int i=0; i<jTable_DoUong.getRowCount(); i++){
                tongTien += (int) jTable_DoUong.getValueAt(i, 3);
            }
        }
        return tongTien;
    }
    
    private void hienthiTongTien(){        
        lbl_TongTien.setText(new XuLyChung().formatCurrency(String.valueOf(tinhTongTien())) + " VNĐ");
    }
    
    private void hienthiTienThua(){
        String tong = lbl_TongTien.getText().trim();
        tong = tong.substring(0, tong.length()-4);
        int tongTien = Integer.parseInt(new XuLyChung().unformatCurrency(tong));
        int tienNhan;
        if(txt_TienNhan.getText().equals("")) tienNhan = 0;
        else tienNhan = Integer.parseInt(txt_TienNhan.getText().trim());
        int tienThua = tienNhan - tongTien;     
        lbl_TienThua.setText(new XuLyChung().formatCurrency(String.valueOf(tienThua)) + " VNĐ");
    }        
    
//    private String formatCurrency(String unfmtStr){
//        int mod = unfmtStr.trim().length()%3;
//        
//        String output = "";        
//        output += unfmtStr.substring(0,mod);        
//        unfmtStr = unfmtStr.substring(mod);
//        int count = 0;
//        while(count < unfmtStr.length()-3){
//            output += "." + unfmtStr.substring(count, count+3);   
//            count += 3;
//        }
//        output += "." + unfmtStr.substring(count, unfmtStr.length());
//        
//        //xoa cac '.' du thua
//        if(output.charAt(0) == '.') output = output.substring(1);
//        if(output.charAt(0) == '-' && output.charAt(1) == '.') output = output.substring(0,1) + output.substring(2,output.length());
//        if(output.charAt(output.length()-1) == '.') output = output.substring(0,output.length()-1);
//        return output;
//    }
//    
//    private String unformatCurrency(String fmtStr){
//        String tmp = "";
//        String parts[] = fmtStr.split("\\.");
//        for (String part : parts) {
//            tmp += part;
//        }
//        return tmp;
//    }        
    
    
    
    
    
    
    
    
    
    
    //--------KIEM TRA RONG, LOI
    private boolean kiemTraRong(){
        if(cbx_loaiDU.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Loại đồ uống!");
            return false;
        }
        if(cbx_tenDU.getItemCount() > 0){
            if(cbx_tenDU.getSelectedItem().equals("")){
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn Tên đồ uống!");
                return false;
            }                
        }else{
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn Tên đồ uống!");
            return false;
        }
        if(txt_slDU.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Số lượng cho đồ uống này!");
            return false;
        }
        return true;
    }
    
    private boolean kiemTraNhapSo(String numStr){
        numStr = numStr.trim();
        return numStr.matches("[0-9]+");
    }
    
    
    
    
    
    
    
    
    
    //========================================================================================================================================
    private String catSo(String arry){
        return arry.replaceAll("[^\\d]+","");
    }
    
    private double chuyenThanhSo(String s){
        String number = "";
        String []array = s.replace(","," ").split("\\s");
        for(String i:array){
            number=number.concat(i);
        }
        return Double.parseDouble(number);
    }
    
    private String catChu(String arry){
        return arry.replaceAll("\\D+","");
    }
    
    private String chuyenDoi(String chuoi){
        DecimalFormat formatter = new DecimalFormat("###,###,###");
        String traVe = formatter.format(chuyenThanhSo(catChu(chuoi)));      
        return traVe;
    }
    
    private int layGio(String s){
        String []array=s.replace(":"," ").split("\\s");
        return Integer.parseInt(array[0]);
    }
    
    private int layPhut(String s){
        String []array=s.replace(":"," ").split("\\s");        
        return Integer.parseInt(array[1]);
    }
    
         
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NguoiDung staff = new NguoiDung();                
                staff.setManv("NV01");
                staff.setHoten("admin");
                staff.setTendn("admin");
                staff.setMacv(1);
                new BanHang(staff, idDatBan).setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_ThanhToan;
    private javax.swing.JToggleButton btn_Them;
    private javax.swing.JButton btn_TroVe;
    private javax.swing.JToggleButton btn_Xoa;
    private javax.swing.JComboBox<String> cbx_loaiDU;
    private javax.swing.JComboBox<String> cbx_tenDU;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_DoUong;
    private javax.swing.JLabel lbl_TenNV;
    private javax.swing.JLabel lbl_TienThua;
    private javax.swing.JLabel lbl_TongTien;
    private javax.swing.JLabel lbl_slBanTrong;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JPanel panel_TextSuggest;
    private javax.swing.JList<String> suggestList;
    private javax.swing.JTextField tfNote;
    private javax.swing.JTextField txt_TenKH;
    private javax.swing.JTextField txt_TienNhan;
    private javax.swing.JTextField txt_TimKiem;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_slDU;
    private javax.swing.JTextField txt_slb;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while(true){              
            RealTimeChung.realtimeResetDatBanCheckInSau30p();
            try{
                Thread.sleep(1);  
            }catch(InterruptedException ex){
                ex.printStackTrace();
            }
        }
    }   

//    @Override
//    public void actionPerformed(ActionEvent e) {
//        Connection cn = ConnectDB.SQLConnect();
//        Date currentDate = new Date();
//        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy kk:mm");
//        String ngayGio = jLabel_ngay.getText()+" "+jLabel_gio.getText();
//        try {
//            Date date =sdf.parse(sdf.format(currentDate));
//            System.out.println(((JButton)e.getSource()).getText());
//            System.out.println(date.toString());
//            String sqlBan = "SELECT MABAN, THOIGIAN, NGAYDAT, TENKH, SDT, FORMAT(NGAYDEN,'dd-MM-yyyy HH:mm')AS NGAYDEN, GHICHU"
//                            +"FROM  DATBAN"
//                            +"WHERE MABAN = "+((JButton)e.getSource()).getText()
//                            +"AND   NGAYDEN = CONVERT(datetime,'"+ngayGio+"',103)";
//            try {
//                PreparedStatement ps = cn.prepareStatement(sqlBan);
//                ResultSet rs = ps.executeQuery();   
//                while(rs.next())
//                {
//                    if(rs.getString("TRANGTHAIDEN").toString().equals("0") && rs.getString("THANHTOAN").toString().equals("0") == false) 
//                    {
//
//                        String sql="SELECT * FROM HOADON WHERE MABAN="+((JButton)e.getSource()).getText()+"";
//                        layDuLieu(sql);
//
//                        xemTinhTrangban();
//
//                        ((JButton)e.getSource()).setIcon(icon2);
//                        jLabel_Ban.setText(((JButton)e.getSource()).getText());
//                        tinhTongTien();
//
//                    }
//                }
//                if(!rs.next())
//                {
//                    if(!((JButton)e.getSource()).getText().equals("26") && !((JButton)e.getSource()).getText().equals("27")
//                        && !((JButton)e.getSource()).getText().equals("28") && !((JButton)e.getSource()).getText().equals("29")
//                        && !((JButton)e.getSource()).getText().equals("30") )
//                    {
//                        String sql="SELECT * FROM HOADON WHERE MABAN="+((JButton)e.getSource()).getText()+"";
//                        layDuLieu(sql);
//
//                        xemTinhTrangban();
//                        ((JButton)e.getSource()).setIcon(icon2);
//                        jLabel_Ban.setText(((JButton)e.getSource()).getText());
//                        tinhTongTien();
//                    }
//                }
//                else {
//
//                    jLabel_Ban.setText("0");
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } catch (ParseException ex) {
//            Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    NguoiDung staff = new NguoiDung();                
//                    staff.setManv("NV01");
//                    staff.setHoten("admin");
//                    staff.setTendn("admin");
//                    staff.setMacv(1);
//                    new BanHang(staff).setVisible(true);
//                } catch (ParseException ex) {
//                    Logger.getLogger(BanHang.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

