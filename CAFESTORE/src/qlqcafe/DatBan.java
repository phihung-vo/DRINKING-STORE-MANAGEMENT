/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qlqcafe;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Nhom 40
 */
public class DatBan extends javax.swing.JFrame implements Runnable{
    private final NguoiDung staff;
    private Thread thread;
    private static DefaultTableModel dtm;
    public static LayDateOh ld0 = new LayDateOh();
    private boolean add = false, change = false;
    private int soBanMax;
    private int slBanDat;
    
    public DatBan(NguoiDung user){
        initComponents();
        this.staff = user;
        this.soBanMax = SLBanMax.getSoBanMax();
        lbl_TenNV.setText(staff.getHoten());
        setResizable(false);
        setLocationRelativeTo(this);  
        loadDSDatBan();        
        khoaThongTinDB();     
        btn_Luu.setEnabled(false);
        btn_Huy.setEnabled(false);
        btn_GoToBanHang.setEnabled(false);
        jdc_Calendar.setDateFormatString("dd/MM/yyyy");        
        realtimeNgayGio();
        threadStart();
    }        
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_Home = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_datBan = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btn_Sua = new javax.swing.JToggleButton();
        btn_Luu = new javax.swing.JToggleButton();
        btn_Xoa = new javax.swing.JToggleButton();
        btn_Huy = new javax.swing.JToggleButton();
        btn_Them = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        lbl_Ngay = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lbl_Gio = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel_nhapSLB = new javax.swing.JLabel();
        txt_slb = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        tfNote = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbl_slBanTrong = new javax.swing.JLabel();
        jLabel_slbandadat = new javax.swing.JLabel();
        lbl_slBanDat = new javax.swing.JLabel();
        cbx_Phut = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbx_Gio = new javax.swing.JComboBox<>();
        jdc_Calendar = new com.toedter.calendar.JDateChooser();
        txt_Sdt = new javax.swing.JTextField();
        txt_TenKH = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lbl_TenNV = new javax.swing.JLabel();
        btn_TimKiem = new javax.swing.JToggleButton();
        txt_TimKiem = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnGr1 = new javax.swing.JRadioButton();
        btnGr2 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        cbx_Loc = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lbl_ID = new javax.swing.JLabel();
        btn_GoToBanHang = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/smart-home.png"))); // NOI18N
        btn_Home.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleTrangChu(evt);
            }
        });
        getContentPane().add(btn_Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ĐẶT BÀN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 380, 60));

        jTable_datBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Đặt", "Thời Gian Đặt", "Thời Gian Đến", "Họ Tên KH", "SĐT", "SL Bàn", "Ghi Chú"
            }
        ));
        jTable_datBan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_datBanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_datBan);
        if (jTable_datBan.getColumnModel().getColumnCount() > 0) {
            jTable_datBan.getColumnModel().getColumn(1).setMinWidth(125);
            jTable_datBan.getColumnModel().getColumn(1).setPreferredWidth(25);
            jTable_datBan.getColumnModel().getColumn(2).setMinWidth(125);
            jTable_datBan.getColumnModel().getColumn(3).setMinWidth(150);
            jTable_datBan.getColumnModel().getColumn(3).setPreferredWidth(95);
            jTable_datBan.getColumnModel().getColumn(4).setMinWidth(100);
            jTable_datBan.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable_datBan.getColumnModel().getColumn(5).setMinWidth(20);
            jTable_datBan.getColumnModel().getColumn(6).setMinWidth(180);
            jTable_datBan.getColumnModel().getColumn(6).setPreferredWidth(85);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 820, 390));

        jPanel1.setPreferredSize(new java.awt.Dimension(622, 80));

        btn_Sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/edit.png"))); // NOI18N
        btn_Sua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaActionPerformed(evt);
            }
        });

        btn_Luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/floppy-disk (1).png"))); // NOI18N
        btn_Luu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LuuActionPerformed(evt);
            }
        });

        btn_Xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/delete.png"))); // NOI18N
        btn_Xoa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        btn_Huy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/x-button.png"))); // NOI18N
        btn_Huy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HuyActionPerformed(evt);
            }
        });

        btn_Them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/plus.png"))); // NOI18N
        btn_Them.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btn_Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btn_Huy, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_Huy, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btn_Luu, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btn_Xoa, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btn_Sua, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btn_Them, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 600, 510, 50));
        jPanel1.getAccessibleContext().setAccessibleName("");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Ngày:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 60, 25));

        lbl_Ngay.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        getContentPane().add(lbl_Ngay, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 120, 25));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Giờ:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 40, 25));

        lbl_Gio.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        getContentPane().add(lbl_Gio, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 120, 25));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tên khách hàng");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, 35));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Số điện thoại");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 120, 37));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Ngày");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 120, 35));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Thời gian");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 120, 35));

        jLabel_nhapSLB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_nhapSLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_nhapSLB.setText("Số lượng bàn đặt");
        getContentPane().add(jLabel_nhapSLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 120, 35));
        getContentPane().add(txt_slb, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 70, 35));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ghi chú", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tfNote.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfNote, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tfNote)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SL bàn trống:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 90, 35));

        lbl_slBanTrong.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_slBanTrong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lbl_slBanTrong, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 540, 40, 35));

        jLabel_slbandadat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel_slbandadat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_slbandadat.setText("SL bàn đặt hiện tại:");
        getContentPane().add(jLabel_slbandadat, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 540, 130, 35));

        lbl_slBanDat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_slBanDat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lbl_slBanDat, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 540, 50, 35));

        cbx_Phut.setMaximumSize(new java.awt.Dimension(39, 39));
        cbx_Phut.setMinimumSize(new java.awt.Dimension(39, 39));
        cbx_Phut.setPreferredSize(null);
        getContentPane().add(cbx_Phut, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 50, 35));
        cbx_Phut.getAccessibleContext().setAccessibleName("");
        cbx_Phut.getAccessibleContext().setAccessibleParent(jPanel1);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText(":");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 7, 35));

        cbx_Gio.setBorder(null);
        getContentPane().add(cbx_Gio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 50, 35));

        jdc_Calendar.setDateFormatString("dd-MM-yyyy");
        getContentPane().add(jdc_Calendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 208, 35));
        getContentPane().add(txt_Sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 208, 35));
        getContentPane().add(txt_TenKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 208, 35));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/unnamed.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 380, 390));

        lbl_TenNV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_TenNV.setText("DIỀN TÊN NV");
        getContentPane().add(lbl_TenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 200, 30));

        btn_TimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/search (1).png"))); // NOI18N
        btn_TimKiem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });
        getContentPane().add(btn_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 90, 40, 30));
        getContentPane().add(txt_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, 340, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Nhập Tên hoặc SDT KH:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 150, 30));

        btnGr1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGr1.setText("Thời gian giảm dần");
        getContentPane().add(btnGr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 145, 25));

        btnGr2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGr2.setText("Thời gian tăng dần");
        getContentPane().add(btnGr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 145, 25));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Lọc");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 150, -1, 25));

        cbx_Loc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbx_Loc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cbx_Loc, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 150, 150, 25));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Sắp xếp");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 150, -1, 25));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel15.setText("ID Đặt Bàn:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, -1, 20));

        lbl_ID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(lbl_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 150, 20));

        btn_GoToBanHang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_GoToBanHang.setText("BÁN HÀNG CHO ĐƠN ĐẶT NÀY?");
        btn_GoToBanHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleGoToBanHang(evt);
            }
        });
        getContentPane().add(btn_GoToBanHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 610, -1, 30));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photo/hinh-nen-mau-xanh-8.jpg"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void hienThongTinDB(){
        txt_TenKH.setEnabled(true);
        txt_Sdt.setEnabled(true);
        cbx_Gio.setEnabled(true);
        cbx_Phut.setEnabled(true);
        jdc_Calendar.setEnabled(true);
        txt_slb.setEnabled(true);
        tfNote.setEnabled(true);
    }
    
    private void khoaThongTinDB(){
        txt_TenKH.setEnabled(false);
        txt_Sdt.setEnabled(false);
        cbx_Gio.setEnabled(false);
        cbx_Phut.setEnabled(false);
        jdc_Calendar.setEnabled(false);
        txt_slb.setEnabled(false);
        tfNote.setEnabled(false);
    }
        
    private void layGio(){
        cbx_Gio.removeAllItems();
        for(int i=7; i <= 20; i++){
            cbx_Gio.addItem(String.valueOf(i));
        }
    }
    
    private void layPhut(){
        cbx_Phut.removeAllItems();
        for(int i=0;i <= 55;i=i+5){
            if(i== 0 || i== 5){
                cbx_Phut.addItem(String.valueOf("0"+i));
            }
            else cbx_Phut.addItem(String.valueOf(i));
        }
    }
    
    private void reset(){
//        resetLaiSLBanTrong();
//        updateSLBanDatTrongNgay();
//        realtimeLoadSlBanTrong();
//        realtimeLoadSlBanDatHienTai();
        layGio();
        layPhut();
        lbl_ID.setText("");
        txt_TenKH.setText("");
        txt_Sdt.setText("");
        cbx_Gio.setSelectedIndex(0);
        cbx_Phut.setSelectedIndex(0);
        ((JTextField)jdc_Calendar.getDateEditor().getUiComponent()).setText("");
        txt_slb.setText("");
        tfNote.setText("");
        btn_Them.setEnabled(true);
        btn_Sua.setEnabled(true);
        btn_Xoa.setEnabled(true);
        btn_Luu.setEnabled(false);
        btn_Huy.setEnabled(false);
    }        
    
    private void threadStart(){
        if(thread == null){
            thread = new Thread(this);
            thread.start();
        }
    }
    
    private void layDulieuDatBan(String sql){
        dtm = (DefaultTableModel)jTable_datBan.getModel();
        dtm.setNumRows(0);        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String dateStr;
        Vector vt;
        try {
            Connection cn = ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){  
                vt = new Vector();
                vt.add(rs.getInt("IDDATBAN"));
                //thoi gian Dat
                dateStr = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(sdf.parse(rs.getString("THOIGIANDAT")));
                vt.add(dateStr);
                //thoi gian Den
                dateStr = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(sdf.parse(rs.getString("THOIGIANDEN")));
                vt.add(dateStr);
                vt.add(rs.getString("HOTENKH"));
                vt.add(rs.getString("SDT"));                
                vt.add(rs.getInt("SOLUONGBAN"));
                vt.add(rs.getString("GHICHU"));
                dtm.addRow(vt);
            }
            jTable_datBan.setModel(dtm);
            rs.close();
            ps.close();
            cn.close();
        } catch(SQLException | ParseException e){
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void loadDSDatBan(){
        String sql = "SELECT * FROM DATBAN";
        layDulieuDatBan(sql);
    }
    
//    private void resetLaiSLBanTrong(){       
//        //cộng lại các số lượng bàn đã đặt
////        String sql = "UPDATE BAN SET TRANGTHAIRONG = " + 1 + " WHERE MABAN IN "
////                    +"(	SELECT DISTINCT MABAN FROM BAN WHERE TRANGTHAIRONG = "+0+")";
//        String sql = "UPDATE BAN SET TRANGTHAIRONG = 1 WHERE TRANGTHAIRONG = 0";
//        ConnectDB.queryUpdate(sql);                     
//    }
    
//    private void updateSLBanDatTrongNgay(){
//        String sql = "EXEC SP_UPDATE_DATBAN_24H '"+ld0.getLayDate0hToday()+"','"+ld0.getLayDate0hTomorrow()+"'";
//        ConnectDB.queryUpdate(sql);   
//    }
    
    private void realtimeNgayGio(){
        String str = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new java.util.Date());
        lbl_Ngay.setText(str.substring(0,10));
        lbl_Gio.setText(str.substring(10));
    }
    
//    private void realtimeResetDatBanCheckInSau30p(){        
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        
//        Date sysDate = new Date();// System.out.println(sysDate + "\t");
//        Date dbDate;
//        
//        String dbDateStr, id;
//        int slBan;
//        String sql = "SELECT IDDATBAN, THOIGIANDEN, SOLUONGBAN FROM DATBAN WHERE CONVERT(VARCHAR, THOIGIANDEN, 23) = CONVERT(VARCHAR, GETDATE(), 23) AND TRANGTHAIDEN = 0";
//        try{
//            Connection cn = qlqcafe.ConnectDB.SQLConnect();
//            PreparedStatement ps = cn.prepareStatement(sql);
//            ResultSet rs = ps.executeQuery();
//            while(rs.next()){                
//                dbDateStr = rs.getString("THOIGIANDEN");
//                dbDate = sdf.parse(dbDateStr);
//                if(dbDate.getTime() + 1800000 <= sysDate.getTime()){                    
//                    id = rs.getString("IDDATBAN");
//                    slBan = rs.getInt("SOLUONGBAN");
//                    ConnectDB.queryUpdate("UPDATE DATBAN SET HOPLE = 0 WHERE IDDATBAN = '" +id+ "'");
//                    ConnectDB.queryUpdate("UPDATE BAN SET TRANGTHAIRONG = 1 WHERE MABAN IN "
//                                        + "(SELECT TOP (ISNULL("+slBan+",0)) MABAN FROM BAN WHERE TRANGTHAIRONG = 0 ORDER BY NEWID())");
//                }
//            }
//        }catch(SQLException | ParseException ex){
//            System.out.println(ex.getMessage());
//        }
//    }        
    
    private boolean kiemTraNhap(){
        String pattern = "0[0-9]{9}";
        String pattern1 = "^([a-zA-Z]{1,}[\\s]{0,}){1,}$";
        if(txt_Sdt.getText().trim().matches(pattern) == false){
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ(chỉ cho phép chữ số,số lượng là 10 số )");
            return false;
        }        
        if(txt_TenKH.getText().trim().matches(pattern1) == false ){
            JOptionPane.showMessageDialog(this, "Tên không được chứa số và ký tự đặt biệt");
            return false;
        }
        return true;
    }
    
    private boolean kiemTraTrung(){        
        Connection cn = ConnectDB.SQLConnect();
        String thoiGian =  cbx_Gio.getSelectedItem().toString().trim() +":"+ cbx_Phut.getSelectedItem().toString().trim();    
        String ngayDen = ((JTextField)jdc_Calendar.getDateEditor().getUiComponent()).getText();
        
        String ngayGioDen = ngayDen +" "+ thoiGian;
        String sql = "EXEC SP_SEL_DATBAN";
        try {
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                if(rs.getString("THOIGIANDEN").trim().equals(ngayGioDen)){
                    JOptionPane.showMessageDialog(this, "Bàn khách đặt đã tồn tại");
                    return false;
                }                  
            }
            cn.close();
            ps.close();
            rs.close();
        }
        catch (HeadlessException | SQLException ex) {
            Logger.getLogger(DoUong.class.getName()).log(Level.SEVERE, null, ex);
        }        
        return true; 
    }
    
    private boolean kiemTraThoiGian(String thoiGianDat, String thoiGianDen) throws ParseException{                
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date dateDat = sdf.parse(thoiGianDat);
        Date dateDen = sdf.parse(thoiGianDen);
        
        if(dateDen.getTime() - dateDat.getTime() <= 0){
            JOptionPane.showMessageDialog(this, "Thời gian đặt không hợp lý");
            return false;
        }
        return true;
    }
    
    private boolean kiemTraRong(){
        if(txt_TenKH.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên khách hàng");
            return false;
        }else if(txt_Sdt.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại của khách hàng");
            return false;
        }else if(((JTextField)jdc_Calendar.getDateEditor().getUiComponent()).getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn ngày khách đặt");
            return false;
        }else if(txt_slb.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số lượng bàn");
            return false;
        }
        return true;
    }
    
    private boolean kiemTraSLban(){
        String slBan = txt_slb.getText().trim();
        if(slBan.matches("[0-9]+")){
            if(Integer.parseInt(lbl_slBanTrong.getText()) == 0){
                JOptionPane.showMessageDialog(this, "Không còn bàn để đặt!");
                return false;
            }else if(Integer.parseInt(slBan) > Integer.parseInt(lbl_slBanTrong.getText())){
                JOptionPane.showMessageDialog(this, "Không đủ bàn để đặt!");
                return false;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Số lượng bàn đặt chỉ được nhập số!");
            return false;
        }        
        return true;
    }
    
    private void themBan(String thoiGianDat, String thoiGianDen, String tenKH, String sdt, String slBan, String ghiChu){       
        String sql="EXEC SP_INS_DATBAN N'"+thoiGianDat+"',N'"+thoiGianDen+"',N'"+tenKH+"',N'"+sdt+"','"+slBan+"',N'"+ghiChu+"'";
        ConnectDB.queryUpdate(sql);
    }
    
    private void chinhSuaBan(String thoiGianDen, String tenKH, String sdt, String slBan, String ghiChu, String ID){        
        String sql = "EXEC SP_UPDATE_DATBAN N'"+thoiGianDen+"',N'"+tenKH+"',N'"+sdt+"','"+slBan+"',N'"+ghiChu+"','"+ID+"'";
        ConnectDB.queryUpdate(sql);
    }
    
    private void xoaDatBan(String id){        
        String sql = "DELETE FROM DATBAN WHERE IDDATBAN = " + id;
        ConnectDB.queryUpdate(sql);      
    }
    
    private boolean kiemTraDatBanHopLe(String id){
//        String sql = "SELECT HOPLE FROM DATBAN WHERE IDDATBAN = '" + id + "'";
        String value = "";
        value = ConnectDB.selectSQLReturnOneValue("HOPLE", "DATBAN", "IDDATBAN = '" + id + "'", "kiemTraDatBanHopLe", "DatBan");
        return value.equals("1");
    }
    
//    private void realtimeLoadSlBanTrong(){
//        Connection cn = ConnectDB.SQLConnect();
//        String sql = "SELECT COUNT(MABAN) AS SLBAN FROM BAN WHERE TRANGTHAIRONG = '" + 1 + "'";
//        try {
//            PreparedStatement ps = cn.prepareStatement(sql);               
//            ResultSet rs = ps.executeQuery();             
//            while(rs.next()){
//                String slBan = String.valueOf(rs.getInt("SLBAN"));
//                lbl_slBanTrong.setText(slBan);
//            }
//            ps.close();
//            rs.close();
//            cn.close();
//        } catch (SQLException e) {
//            e.getMessage();
//        }
//    }
    
    private int realtimeLoadSlBanDatHienTai(){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        
        Date sysDate = new Date();
        Date dbDate;
        
        String dbDateStr;        
        String sql = "SELECT IDDATBAN, THOIGIANDEN, SOLUONGBAN FROM DATBAN WHERE CONVERT(VARCHAR, THOIGIANDEN, 23) = CONVERT(VARCHAR, GETDATE(), 23) AND TRANGTHAIDEN = 0";
        int count = 0;
        try{
            Connection cn = qlqcafe.ConnectDB.SQLConnect();
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){                
                dbDateStr = rs.getString("THOIGIANDEN");
                dbDate = sdf.parse(dbDateStr);
                sysDate = sdf.parse(sdf.format(sysDate));
                if(dbDate.getTime() + 1800000 > sysDate.getTime()){                    
                    count += rs.getInt("SOLUONGBAN");
                }
            }
            lbl_slBanDat.setText(String.valueOf(count));
            int slBanDatRealTime = Integer.parseInt(lbl_slBanDat.getText().trim());
            if(slBanDat != slBanDatRealTime){
                if(slBanDat > slBanDatRealTime) new XuLyChung().setSLBanTrongHienTaiTang(String.valueOf(slBanDat - slBanDatRealTime));
                if(slBanDat < slBanDatRealTime) new XuLyChung().setSLBanTrongHienTaiTang(String.valueOf(slBanDatRealTime - slBanDat));
            }
        }catch(SQLException | ParseException ex){
            System.out.println(ex.getMessage());
        }
        return count;
    }    
    
//    private void loadSlBanDat(){
//        Connection cn = ConnectDB.SQLConnect();
//        String sql = "SELECT COUNT(MABAN) AS SLBAN FROM BAN WHERE TRANGTHAIRONG = '"+1+"'";
//        try {
//            PreparedStatement ps = cn.prepareStatement(sql);               
//            ResultSet rs = ps.executeQuery();
//             
//            while(rs.next()){
//                String slBan = String.valueOf(rs.getInt("SLBAN"));
//                jLabel_nhapslbandat.setText(slBan);
//            }
//            ps.close();
//            rs.close();
//            cn.close();
//        } catch (SQLException e) {
//            e.getMessage();
//        }
//    }
    
//    private void updateLaiSLBanDau(){
        //items: SỐ LƯỢNG BÀN ĐẶT BAN ĐẦU
        //slBan: SỐ LƯỢNG BÀN SAU KHI THAY ĐỔI
        
//        SL ĐẶT BÀN BAN ĐẦU: 3 (ĐỔI TRẠNG THÁI TỪ 1->0)
//        CT:UPDATE BAN SET TRANGTHAIRONG = 0 WHERE MABAN IN
//                           (SELECT TOP 3 MABAN FROM BAN WHERE TRANGTHAIRONG = 1 ORDER BY NEWID())-> 30-3 = 27
//
//        SL BÀN SAU KHI THAY ĐỔI: 2 (ĐỔI TRẠNG THÁI TỪ 0->1: 3 RỒI TỪ 1->0: 2)
//        CỘNG LẠI 3 ĐƠN VỊ(ĐỔI TỪ 0->1)
//        CT: UPDATE BAN SET TRANGTHAIRONG = 1 WHERE MABAN IN
//                           (SELECT TOP 3 MABAN FROM BAN WHERE TRANGTHAIRONG = 0 ORDER BY NEWID())->27+3 = 30
//
//        SAU ĐÓ TRỪ ĐI 2 ĐƠN VỊ(ĐỔI TỪ 1->0)
//        CT:UPDATE BAN SET TRANGTHAIRONG = 0 WHERE MABAN IN
//                           (SELECT TOP 2 MABAN FROM BAN WHERE TRANGTHAIRONG = 1 ORDER BY NEWID())->30-2 = 28
        //cộng lại sl ban đầu
//        String sql = "UPDATE BAN SET TRANGTHAIRONG = "+0+" WHERE MABAN IN"
//                    +"(SELECT TOP "+items+" MABAN FROM BAN WHERE TRANGTHAIRONG = "+1+" ORDER BY NEWID())";
//        ConnectDB.queryUpdate(sql);
//    }
    
    private void updateLaiSLBanThayDoi(int slBan){
        //items: SỐ LƯỢNG BÀN ĐẶT BAN ĐẦU
        //slBan: SỐ LƯỢNG BÀN SAU KHI THAY ĐỔI
//        Connection cn = ConnectDB.SQLConnect();
        //trừ cho số lượng thay đổi
        String sql = "UPDATE BAN SET TRANGTHAIRONG = "+1+" WHERE MABAN IN"
                    +"(SELECT TOP "+slBan+" MABAN FROM BAN WHERE TRANGTHAIRONG = "+0+" ORDER BY NEWID())";
        ConnectDB.queryUpdate(sql);
    }
//    
//    private void updateLaiSLBanSauKhiXoa(String slbCu){
//        String sql = "UPDATE BAN SET TRANGTHAIRONG = "+0+" WHERE MABAN IN"
//                    +"(SELECT TOP "+slbCu+" MABAN FROM BAN WHERE TRANGTHAIRONG = "+1+" ORDER BY NEWID())";
//        ConnectDB.queryUpdate(sql);
//    }
    
    private void updateSLBan(int slBan){
        String sql = "UPDATE BAN SET TRANGTHAIRONG = "+1+" WHERE MABAN IN "
                    +"(SELECT TOP "+slBan+" MABAN FROM BAN WHERE TRANGTHAIRONG = "+0+" ORDER BY NEWID())";
        ConnectDB.queryUpdate(sql);
    }        
    
    private void jTable_datBanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_datBanMouseClicked
        int i = jTable_datBan.getSelectedRow();
        dtm = (DefaultTableModel) jTable_datBan.getModel();
        
        lbl_ID.setText(dtm.getValueAt(i, 0).toString());        
        txt_TenKH.setText(dtm.getValueAt(i,3).toString());
        txt_Sdt.setText(dtm.getValueAt(i,4).toString());
        
        String chuoiTGDen = dtm.getValueAt(i,2).toString();
//        Lay ngay
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            jdc_Calendar.setDate(sdf.parse(chuoiTGDen));
        } catch (ParseException ex) {
            Logger.getLogger(NhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }                        
//        Lay gio va phut
        layGio();
        layPhut();
        cbx_Gio.setSelectedItem(chuoiTGDen.substring(11,16).substring(0,2));
        cbx_Phut.setSelectedItem(chuoiTGDen.substring(11,16).substring(3,5));
//        Lay so luong ban dat ban dau
        txt_slb.setText(dtm.getValueAt(i,5).toString());        
        
        try{
            tfNote.setText("");
            tfNote.setText(dtm.getValueAt(i,6).toString());
        }catch(Exception ex){}
        
        if(add == false && change == false) btn_GoToBanHang.setEnabled(true);
    }//GEN-LAST:event_jTable_datBanMouseClicked

    private void handleTrangChu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleTrangChu
        if(staff.getMacv() == 1){
            GiaoDienChung gdc = new GiaoDienChung(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }
        if(staff.getMacv() == 2){
            GiaoDienNhanVien gdc = new GiaoDienNhanVien(this.staff);
            this.setVisible(false);
            gdc.setVisible(true);
        }
    }//GEN-LAST:event_handleTrangChu
        
    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        // TODO add your handling code here:
        if(!txt_TimKiem.getText().equals("")){
            String sql ="SP_SEL_TIMKIEM_DATBAN N'%"+txt_TimKiem.getText()+"%'";
            layDulieuDatBan(sql);
            txt_TimKiem.setText("");
        }

    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        // TODO add your handling code here:        
        add = true;
        change = false;  
        reset();
        hienThongTinDB();
        btn_Them.setEnabled(false);              
        btn_Xoa.setEnabled(false);
        btn_Sua.setEnabled(false);
        btn_Luu.setEnabled(true);  
        btn_Huy.setEnabled(true);     
        btn_GoToBanHang.setEnabled(false);
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_HuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HuyActionPerformed
        // TODO add your handling code here:
        add = false;
        change = false;
        reset();
        khoaThongTinDB();
        this.loadDSDatBan();
        btn_GoToBanHang.setEnabled(false);
    }//GEN-LAST:event_btn_HuyActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        String id = lbl_ID.getText();
        String ten = txt_TenKH.getText();
        String sdt= txt_Sdt.getText();
        Object gio = cbx_Gio.getSelectedItem() + ":" +cbx_Phut.getSelectedItem();
        String thoiGianDen = ((JTextField)jdc_Calendar.getDateEditor().getUiComponent()).getText()+" "+gio.toString();
        String slbCu = txt_slb.getText().trim();
        
        if(lbl_ID.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Hãy chọn Đặt bàn cần xóa!");
        }else{
            if(kiemTraDatBanHopLe(lbl_ID.getText().trim())){
                int click = JOptionPane.showConfirmDialog(this , "Xác nhận xóa đặt bàn với các thông tin sau:\n\tTên KH: " + ten + "\n\tSĐT: " + sdt
                        + "\n\tNgày giờ đến: " + thoiGianDen, "Xác nhận", 2);
                if(click == JOptionPane.YES_OPTION){
                    xoaDatBan(id);                    
                    new XuLyChung().setSLBanTrongHienTaiTang(slbCu);
                    JOptionPane.showMessageDialog(this, "Xóa thành công đặt bàn.\n\nĐã cập nhật lại " + slbCu + " bàn trống.");
                    reset();
                    this.loadDSDatBan();
                    khoaThongTinDB();
                }
            }else{
                int click = JOptionPane.showConfirmDialog(this , "Đặt bàn này không còn hiệu lục nhả bàn trống.\n\n Tiếp tục xóa?", "Xác nhận", 2);
                if(click == JOptionPane.YES_OPTION){
                    xoaDatBan(id); 
                    JOptionPane.showMessageDialog(this, "Xóa thành công đặt bàn.");
                }
            }            
        }
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void btn_LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LuuActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
               
        String id, tenKH, sdt, gio, thoiGianDen, slBan, ghiChu;
        String thoiGianDat = sdf.format(new Date()); System.out.println(thoiGianDat);
        if(add == true){
            try {
                if(kiemTraRong() == true && kiemTraTrung() == true && kiemTraNhap() == true && kiemTraSLban()==true){
                    gio = cbx_Gio.getSelectedItem().toString().trim() + ":" +cbx_Phut.getSelectedItem().toString().trim() + ":00";
                    thoiGianDen = ((JTextField)jdc_Calendar.getDateEditor().getUiComponent()).getText().trim() + " " + gio;
                    if(kiemTraThoiGian(thoiGianDat, thoiGianDen) == true){
                        int click = JOptionPane.showConfirmDialog(null , "THÊM ĐẶT BÀN NÀY? ", "Xác nhận", 2);
                        if(click == JOptionPane.YES_OPTION){
                            Date date = sdf.parse(thoiGianDat);
                            thoiGianDat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date);
                            date = sdf.parse(thoiGianDen);
                            thoiGianDen = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date);
                            tenKH = txt_TenKH.getText().trim();
                            sdt = txt_Sdt.getText().trim();                                                        
                            slBan = txt_slb.getText();
                            ghiChu = tfNote.getText();
                            themBan(thoiGianDat, thoiGianDen, tenKH, sdt, slBan, ghiChu);
//                            updateSLBan(Integer.parseInt(slBan));
//                            new XuLyChung().setSLBanTrongGiam(slBan);
                            JOptionPane.showMessageDialog(this, "Thêm bàn thành công");
                            reset();
                            this.loadDSDatBan();
                            khoaThongTinDB();
                        }
                    }                    
                }
            } catch (ParseException ex) {
                Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(change == true){
            try {
                if(kiemTraRong() == true && kiemTraNhap() == true){
                    id = lbl_ID.getText().trim();
                    if(kiemTraDatBanHopLe(id)){
                        gio = cbx_Gio.getSelectedItem().toString().trim() + ":" +cbx_Phut.getSelectedItem().toString().trim() + ":00";
                        thoiGianDen = ((JTextField)jdc_Calendar.getDateEditor().getUiComponent()).getText().trim() + " " + gio;
                        if(kiemTraThoiGian(thoiGianDat, thoiGianDen) == true){
                            int click = JOptionPane.showConfirmDialog(this, "CẬP NHẬT LỊCH ĐẶT BÀN NÀY?", "Xác nhận", 2);
                            if(click == JOptionPane.YES_OPTION){

                                tenKH = txt_TenKH.getText().trim();
                                sdt = txt_Sdt.getText().trim();                                                        
                                slBan = txt_slb.getText();
                                ghiChu = tfNote.getText();
                                Date date = sdf.parse(thoiGianDen);
                                thoiGianDen = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date);
                                chinhSuaBan(thoiGianDen, tenKH, sdt, slBan, ghiChu, id);
                                JOptionPane.showMessageDialog(this, "Sửa bàn thành công");
//                                updateLaiSLBanDau();
//                                updateLaiSLBanThayDoi(Integer.parseInt(slBan));
                                reset();
                                this.loadDSDatBan();
                                khoaThongTinDB();
                            }
                        }
                    }else JOptionPane.showMessageDialog(this, "Đặt bàn này đã quá thời gian chỉnh sửa!\nThời gian chỉnh sửa muộn nhất là 30 phút sau thời gian đăng ký check in");                                          
                }
            } catch (ParseException ex) {
                Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_LuuActionPerformed

    private void btn_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaActionPerformed
        // TODO add your handling code here:
        change = true;
        add = false;                
        btn_Them.setEnabled(false);
        btn_Xoa.setEnabled(false);
        btn_Sua.setEnabled(false);
        btn_Luu.setEnabled(true);
        btn_Huy.setEnabled(true);
        hienThongTinDB();
        btn_GoToBanHang.setEnabled(false);
    }//GEN-LAST:event_btn_SuaActionPerformed

    private void handleGoToBanHang(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleGoToBanHang
        // TODO add your handling code here:
        BanHang banHang = new BanHang(this.staff, lbl_ID.getText().trim());
        this.setVisible(false);
        banHang.setVisible(true);        
    }//GEN-LAST:event_handleGoToBanHang

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NguoiDung staff = new NguoiDung();
                staff.setManv("NV01");
                staff.setHoten("admin");
                staff.setTendn("admin");
                staff.setMacv(1);
                new DatBan(staff).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnGr1;
    private javax.swing.JRadioButton btnGr2;
    private javax.swing.JButton btn_GoToBanHang;
    private javax.swing.JToggleButton btn_Home;
    private javax.swing.JToggleButton btn_Huy;
    private javax.swing.JToggleButton btn_Luu;
    private javax.swing.JToggleButton btn_Sua;
    private javax.swing.JToggleButton btn_Them;
    private javax.swing.JToggleButton btn_TimKiem;
    private javax.swing.JToggleButton btn_Xoa;
    private javax.swing.JComboBox<String> cbx_Gio;
    private javax.swing.JComboBox<String> cbx_Loc;
    private javax.swing.JComboBox<String> cbx_Phut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_nhapSLB;
    private javax.swing.JLabel jLabel_slbandadat;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_datBan;
    private com.toedter.calendar.JDateChooser jdc_Calendar;
    private javax.swing.JLabel lbl_Gio;
    private javax.swing.JLabel lbl_ID;
    private javax.swing.JLabel lbl_Ngay;
    private javax.swing.JLabel lbl_TenNV;
    private javax.swing.JLabel lbl_slBanDat;
    private javax.swing.JLabel lbl_slBanTrong;
    private javax.swing.JTextField tfNote;
    private javax.swing.JTextField txt_Sdt;
    private javax.swing.JTextField txt_TenKH;
    private javax.swing.JTextField txt_TimKiem;
    private javax.swing.JTextField txt_slb;
    // End of variables declaration//GEN-END:variables


    @Override
    public void run() {
        while(true){
            realtimeNgayGio();
            RealTimeChung.realtimeResetDatBanCheckInSau30p();
            slBanDat = realtimeLoadSlBanDatHienTai();
            int slBanTrong = Integer.parseInt(RealTimeChung.realtimeLoadSlBanTrong())-slBanDat;
            
            lbl_slBanTrong.setText(String.valueOf(slBanTrong));
            realtimeLoadSlBanDatHienTai();
            try{
                Thread.sleep(1);  
            }catch(InterruptedException ex){
                ex.printStackTrace();
            }
        }
    }
}
